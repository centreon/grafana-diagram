{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","mermaid","d3","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","mappingEditor","mermaidAPI","panelDefaults","composites","metricCharacterReplacements","seriesOverrides","decimals","colors","style","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","moddedSeriesVal","format","valueName","valueOptions","valueMaps","op","text","mappingTypes","name","content","mode","mermaidServiceUrl","mermaidServiceKey","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","svgData","updateDiagram","render","metricName","replacedText","replace","index","replacement","pattern","replacementPattern","stringToJsRegex","replaceWithText","seriesData","alias","replaceMetricCharacters","target","datapoints","unit","flotpairs","getFlotPairs","last","from","range","isOutsideRange","override","push","without","refresh","composite","ctrl","metrics","undefined","metric","mapping","type","valueToText","rangeToText","valueMap","thresholdCount","colorCount","colorIndex","splice","subItem","remove","svg","graphDefinition","substituteHashPrefixedNotation","templateSrv","diagramContainer","_this","renderCallback","svgCode","bindFunctions","html","templatedURL","scopedVars","key","method","url","headers","then","successCallback","response","clearDiagram","renderDiagram","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","applyValueMapping","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","hasOwnProperty","getWorstSeries","showLowest","copy","clone","series1","series2","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","split","strVale","Number","trim","slice","reverse","unitFormat","dataItem","valueMapping","parseFloat","rangeMapping","rangeNapping","to","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","updateCanvasStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","selectElementById","container","select","selectElementByEdgeLabel","selectAll","filter","selectElementByAlias","targetElement","node","parentShape","closest","styleD3Shapes","shapes","div","fo","classed","styleEdgeLabel","edgeParent","parentNode","v","injectCustomStyle","diagramDiv","styleElement","updateStyle","empty","renderingCompleted","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import mermaid from './libs/mermaid/dist/mermaid';\nimport d3 from './libs/d3/dist/d3.min';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport {\n  diagramEditor,\n  displayEditor,\n  compositeEditor,\n  mappingEditor\n} from './properties';\nimport _ from 'lodash';\nimport './series_overrides_diagram_ctrl';\nimport './css/diagram.css!';\n\nconst mermaidAPI = mermaid.mermaidAPI;\n\nconst panelDefaults = {\n  composites: [],\n  metricCharacterReplacements: [],\n  // other style overrides\n  seriesOverrides: [],\n  thresholds: '0,10',\n  decimals: 2, // decimal precision\n  colors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\n  style: '',\n  legend: {\n    show: true,\n    min: true,\n    max: true,\n    avg: true,\n    current: true,\n    total: true,\n    gradient: {\n      enabled: true,\n      show: true\n    }\n  },\n  maxDataPoints: 100,\n  mappingType: 1,\n  maxWidth: false,\n  nullPointMode: 'connected',\n  moddedSeriesVal: 0,\n  format: 'none',\n  valueName: 'avg',\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\n  valueMaps: [{\n    value: 'null',\n    op: '=',\n    text: 'N/A'\n  }],\n  mappingTypes: [\n    {name: 'value to text', value: 1},\n    {name: 'range to text', value: 2},\n  ],\n  content: 'graph LR\\n' +\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\n    'A --> C(Round Rect)\\n' +\n    'B --> D{Rhombus}\\n' +\n    'C --> D\\n',\n  mode: 'content', //allowed values: 'content' and 'url'\n  mermaidServiceUrl: '',\n  mermaidServiceKey: '',\n  init: {\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\n    cloneCssStyles: true, // - This options controls whether or not the css rules should be copied into the generated svg\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\n    flowchart: {\n      htmlLabels: true,\n      useMaxWidth: true\n    },\n    sequenceDiagram: {\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\n      actorMargin: 50, // - Margin between actors\n      width: 150, // - Width of actor boxes\n      height: 65, // - Height of actor boxes00000000001111\n      boxMargin: 10, // - Margin around l01oop boxes\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\n      noteMargin: 10, // - margin around notes\n      messageMargin: 35, // - Space between messages\n      mirrorActors: true, // - mirror actors under diagram\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\n      useMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\n    },\n    gantt: {\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\n      barHeight: 20, // - the height of the bars in the graph\n      barGap: 4, // - the margin between the different activities in the gantt diagram\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\n      fontSize: 11, // - font size ...\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\n      numberSectionStyles: 3, // - the number of alternating section styles\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\n\t\t\t\t[\n\t\t        // Within a day\n\t\t        ['%I:%M', function (d) {\n\t\t            return d.getHours();\n\t\t        }],\n\t\t        // Monday a week\n\t\t        ['w. %U', function (d) {\n\t\t            return d.getDay() == 1;\n\t\t        }],\n\t\t        // Day within a week (not monday)\n\t\t        ['%a %d', function (d) {\n\t\t            return d.getDay() && d.getDate() != 1;\n\t\t        }],\n\t\t        // within a month\n\t\t        ['%b %d', function (d) {\n\t\t            return d.getDate() != 1;\n\t\t        }],\n\t\t        // Month\n\t\t        ['%m-%y', function (d) {\n\t\t            return d.getMonth();\n\t\t        }]] **/\n    },\n    //classDiagram: {},\n    //info: {}\n  }\n};\n\nclass DiagramCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $sce, $http) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.$http = $http;\n    this.panel.graphId = 'diagram_' + this.panel.id;\n    this.containerDivId = 'container_' + this.panel.graphId;\n    this.$sce = $sce;\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.unitFormats = kbn.getUnitFormats();\n    this.initializeMermaid();\n  }\n\n  initializeMermaid() {\n    mermaidAPI.initialize(this.panel.init);\n    mermaidAPI.parseError = this.handleParseError.bind(this);\n  }\n\n  handleParseError(err, hash) {\n    this.error = 'Failed to parse diagram definition';\n    this.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Diagram', diagramEditor, 2);\n    this.addEditorTab('Display', displayEditor, 3);\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\n    this.addEditorTab('Value Mappings', mappingEditor, 5);\n  }\n\n  getDiagramContainer() {\n    return $(document.getElementById(this.containerDivId));\n  }\n\n  onDataReceived(dataList) {\n    console.debug('received data');\n    console.debug(dataList);\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    console.debug('mapped dataList to series');\n    console.debug(this.series);\n    var data = this.setValues();\n    // this update works for local diagrams, if the url method is used the data has to be stored in the callback\n    this.svgData = data;\n    this.updateDiagram(data);\n    this.render();\n  }\n\n  replaceMetricCharacters(metricName) {\n    // a datasource sending bad data will have a type other than string, set it to \"MISSING_METRIC_TARGET\" and return\n    if (typeof metricName !== 'string') return \"DATASOURCE_SENT_INVALID_METRIC_TARGET\";\n    var replacedText = metricName.replace(/\"|,|;|=|:|{|}/g, '_');\n    for (var index in this.panel.metricCharacterReplacements) {\n      var replacement = this.panel.metricCharacterReplacements[index];\n      // start with a simple replacement\n      var pattern = replacement.replacementPattern;\n      // check if the pattern is empty\n      if (pattern.length === 0) continue;\n      // if it is a regex, convert\n      if (pattern[0] === '/') {\n        pattern = kbn.stringToJsRegex(replacement.replacementPattern);\n      }\n      replacedText = replacedText.replace(\n        pattern,\n        replacement.replaceWithText\n      );\n    }\n    return replacedText;\n  }\n\n  seriesHandler(seriesData) {\n    var alias = this.replaceMetricCharacters(seriesData.target);\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: alias,\n      unit: seriesData.unit\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    var datapoints = seriesData.datapoints || [];\n    if (datapoints && datapoints.length > 0) {\n      var last = datapoints[datapoints.length - 1][1];\n      var from = this.range.from;\n      if (last - from < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n    return series;\n  } // End seriesHandler()\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.refresh();\n  }\n\n  addComposite(composite) {\n    this.panel.composites.push(composite || {});\n  }\n  removeComposite(composite) {\n    this.panel.composites = _.without(this.panel.composites, composite);\n    this.refresh();\n  }\n  getSeriesNamesForComposites() {\n    return _.map(this.$scope.ctrl.series, function(series) {\n      return series.alias;\n    });\n  }\n\n  addMetricToComposite(composite) {\n    if (composite.metrics === undefined) {\n      composite.metrics = [{}];\n    } else {\n      composite.metrics.push({});\n    }\n    this.refresh();\n  }\n  removeMetricFromComposite(composite, metric) {\n    composite.metrics = _.without(composite.metrics, metric);\n    this.refresh();\n  }\n\n  addMetricCharacterReplacement(replacement) {\n    this.panel.metricCharacterReplacements.push(replacement || {\n      replacementPattern: '',\n      replaceWithText: '_'\n    });\n  }\n  removeMetricCharacterReplacement(replacement) {\n    this.panel.metricCharacterReplacements = _.without(this.panel.metricCharacterReplacements, replacement);\n    this.refresh();\n  }\n\n  addValueMapping(mapping) {\n    this.panel.valueMaps.push(mapping || {});\n  }\n\n  removeValueMapping(mapping) {\n    this.panel.valueMaps = _.without(this.panel.valueMaps, mapping);\n  }\n\n  addEntryToValueMapping(mapping) {\n    if (mapping.type == 1) {\n      if (mapping.valueToText === undefined) {\n        mapping.valueToText = [{}];\n      } else {\n        mapping.valueToText.push({});\n      }\n    } else if (mapping.type == 2) {\n      if (mapping.rangeToText === undefined) {\n        mapping.rangeToText = [{}];\n      } else {\n        mapping.rangeToText.push({});\n      }\n    }\n  }\n\n  removeEntryFromValueMapping(valueMap, mapping) {\n    if (valueMap.type == 1) {\n      valueMap.valueToText = _.without(valueMap.valueToText, mapping);\n    } else if (valueMap.type == 2) {\n      valueMap.rangeToText = _.without(valueMap.rangeToText, mapping);\n    }\n  }\n  \n  updateThresholds() {\n    var thresholdCount = this.panel.thresholds.length;\n    var colorCount = this.panel.colors.length;\n    this.refresh();\n  }\n\n  changeColor(colorIndex, color) {\n    this.panel.colors[colorIndex] = color;\n  }\n\n  removeColor(colorIndex) {\n    this.panel.colors.splice(colorIndex, 1);\n  }\n\n  addColor() {\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  clearDiagram() {\n    if ($('#'+this.panel.graphId).length) {\n      $('#' + this.panel.graphId).remove();\n    }\n    this.svg = {};\n  }\n\n  renderDiagram(graphDefinition, data) {\n    // substitute values inside \"link text\"\n    // this will look for any composite prefixed with a # and substitute the value of the composite\n    // if a series alias is found, in the form #alias, the value will be substituted\n    // this allows link values to be displayed based on the metric\n    graphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\n    graphDefinition = this.templateSrv.replaceWithText(graphDefinition);\n    var diagramContainer = $(document.getElementById(this.containerDivId));\n    var _this = this;\n    var renderCallback = function(svgCode, bindFunctions) {\n      if (svgCode === '') {\n        diagramContainer.html('There was a problem rendering the graph');\n      } else {\n        diagramContainer.html(svgCode);\n        bindFunctions(diagramContainer[0]);\n        console.debug(\"Inside rendercallback of renderDiagram\");\n        // svgData is empty when this callback happens, update it so the styles will be applied\n        _this.svgData = data;\n        // force a render or we will not see an update\n        _this.render();\n      }\n    };\n    // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\n    mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\n  }\n\n  updateDiagram(data) {\n    if (this.panel.content.length > 0) {\n      var mode = this.panel.mode;\n      if (mode == 'url') {\n        var templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\n        var _this = this;\n        var key = this.panel.mermaidServiceKey;\n        this.$http({\n          method: 'GET',\n          url: templatedURL,\n          headers: {\n            'Accept': 'text/x-mermaid,text/plain;q=0.9,*/*;q=0.8'\n            ,'x-api-key': this.panel.mermaidServiceKey\n          }\n        }).then(function successCallback(response) {\n          //the response must have text/plain content-type\n          // clearing the diagram here will result in less artifacting waiting for the response\n          _this.clearDiagram();\n          _this.renderDiagram(response.data, data);\n        }, function errorCallback(response) {\n          console.warn('error', response);\n        })\n      } else {\n        this.clearDiagram();\n        this.renderDiagram(this.panel.content, data);\n      }\n    }\n  } // End updateDiagram()\n\n\n\n  /**\n   * substitute values inside \"link text\"\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\n   * if a series alias is found, in the form #alias, the value will be substituted\n   * this allows link values to be displayed based on the metric\n   *\n   * Prefix Modifier For Composites\n   *   # Raw Value of Series\n   *   ! Raw Value plus Metric Name\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\n   *\n   * Prefix Modifier For Series\n   *   # Raw Value of Series\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\n   * @param  {[Array]} data [Series Data]\n   * @return {[String]} [Modified Graph Definition]\n   */\n  substituteHashPrefixedNotation(graphDefinition, data) {\n    // inspect the string, locate all # prefixed items, and replace them with the value\n    // of the series. If no matching series is found, leave it alone\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\n    if (matches === null) return graphDefinition;\n    // check if there is a composite with a matching name\n    for (var i = 0; i < matches.length; i++) {\n      var aMatch = matches[i];\n      var valueType = aMatch[0];\n      aMatch = aMatch.substring(1);\n      // check composites first\n      for (var j = 0; j < this.panel.composites.length; j++) {\n        var aComposite = this.panel.composites[j];\n        if (aComposite.name === aMatch) {\n          // found matching composite, get the valueFormatted\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[aComposite.name].value;\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\n              break;\n            case '!':\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\n              break;\n            case '@':\n              displayedValue = data[aComposite.name].valueFormatted;\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\n              break;\n            case '&':\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\n              break;\n          }\n        }\n      }\n      // next check series\n      for (var k = 0; k < this.series.length; k++) {\n        var seriesItem = this.series[k];\n        if (seriesItem.alias === aMatch) {\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[seriesItem.alias].value;\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\n              break;\n            case '@':\n              displayedValue = data[seriesItem.alias].valueFormatted;\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\n              break;\n          }\n        }\n      }\n    }\n    return graphDefinition;\n  }\n\n  setValues() {\n    var data = {};\n    if (this.series && this.series.length > 0) {\n      for (let i = 0; i < this.series.length; i++) {\n        let seriesItem = this.series[i];\n        console.debug('setting values for series');\n        console.debug(seriesItem);\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\n        // store alias in data\n        data[seriesItem.alias].alias = seriesItem.alias;\n        var lastPoint = _.last(seriesItem.datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueRounded = 0;\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\n        } else if (_.isString(lastValue)) {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\n          data[seriesItem.alias].valueRounded = 0;\n        } else {\n          data[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\n          var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\n          // put the value in quotes to escape \"most\" special characters\n          data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n          data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\n        }\n        if (this.panel.legend.gradient.enabled) {\n          data[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\n        } else {\n          data[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\n        }\n      }\n    }\n    // Map values to text if needed\n    this.applyValueMapping(data);\n    // now add the composites to data\n    for (let i = 0; i < this.panel.composites.length; i++) {\n      let aComposite = this.panel.composites[i];\n      let currentWorstSeries = null;\n      let currentWorstSeriesName = null;\n      for (let j = 0; j < aComposite.metrics.length; j++) {\n    \tlet aMetric = aComposite.metrics[j];\n    \tlet seriesName = aMetric.seriesName;\n        // make sure we have a match\n        if (!data.hasOwnProperty(seriesName)) {\n        \tcontinue;\n        }\n        let seriesItem = data[seriesName];\n        // check colorData thresholds\n        if (currentWorstSeries === null) {\n          currentWorstSeries = seriesItem;\n        } else {\n          currentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem, aComposite.showLowest);\n        }\n      }\n      // Prefix the valueFormatted with the actual metric name\n      if (currentWorstSeries !== null) {\n    \tlet copy = _.clone(currentWorstSeries);\n    \tcopy.valueFormattedWithPrefix = currentWorstSeries.alias + ': ' + currentWorstSeries.valueFormatted;\n    \tcopy.valueRawFormattedWithPrefix = currentWorstSeries.alias + ': ' + currentWorstSeries.value;\n    \tcopy.valueFormatted = currentWorstSeries.alias + ': ' + currentWorstSeries.valueFormatted;\n        // now push the composite into data\n        data[aComposite.name] = copy;\n      }\n    }\n    return data;\n  } // End setValues()\n\n  getWorstSeries(series1, series2, showLowest) {\n    if (showLowest) {\n    \t// return series1 if the value is lower, otherwise return series2\n    \treturn series1.value < series2.value ? series1 : series2;\n    } else {\n    \t// return series1 if the value is greater, otherwise return series2\n    \treturn series1.value > series2.value ? series1 : series2;\n    }\n  }\n\n  getGradientForValue(data, value) {\n    console.debug('Getting gradient for value');\n    console.debug(data);\n    console.debug(value);\n    var min = Math.min.apply(Math, data.thresholds);\n    var max = Math.max.apply(Math, data.thresholds);\n    var absoluteDistance = max - min;\n    var valueDistanceFromMin = value - min;\n    var xPercent = valueDistanceFromMin / absoluteDistance;\n    // Get the smaller number to clamp at 0.999 max\n    xPercent = Math.min(0.999, xPercent);\n    // Get the larger number to clamp at 0.001 min\n    xPercent = Math.max(0.001, xPercent);\n    if (data.invertColors) {\n      xPercent = 1 - xPercent;\n    }\n\n    return getColorByXPercentage(this.canvas, xPercent);\n  }\n\n  applyOverrides(seriesItemAlias) {\n    var seriesItem = {},\n      colorData = {},\n      overrides = {};\n\n    console.debug('applying overrides for seriesItem');\n    console.debug(seriesItemAlias);\n    console.debug(this.panel.seriesOverrides);\n    for (var i = 0; i < this.panel.seriesOverrides.length; i++) {\n      console.debug('comparing:');\n      console.debug(this.panel.seriesOverrides[i]);\n\n      if (this.panel.seriesOverrides[i]) {\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\n        var matches = seriesItemAlias.match(regex);\n        if (matches && matches.length > 0) {\n          overrides = this.panel.seriesOverrides[i];\n        }\n      }\n    }\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\n      return Number(strVale.trim());\n    });\n    colorData.colorMap = this.panel.colors.slice();\n    colorData.invertColors = overrides.invertColors || false;\n    if (colorData.invertColors) {\n      colorData.colorMap.reverse();\n    }\n    seriesItem.colorData = colorData;\n\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\n\n    seriesItem.format = overrides.unitFormat || this.panel.format;\n    return seriesItem;\n  }\n\n\tapplyValueMapping(data) {\n\t\tfor (let i = 0; i < this.panel.valueMaps.length; i++) {\n\t\t\tvar map = this.panel.valueMaps[i];\n\t\t\tif (! map.hasOwnProperty('alias'))\n\t\t\t\tcontinue;\n\t\t\tvar regex = kbn.stringToJsRegex(map.alias);\n\t\t\tconsole.debug(\"Checking mapping: \" +map.alias);\n\t\t\tfor(let j = 0; j < this.series.length; j++) {\n\t\t\t\tvar matches = this.series[j].alias.match(regex);\n\t\t\t\tconsole.debug(\"  Series: \" +this.series[j].alias);\n\t\t\t\tif (matches && matches.length > 0) {\n\t\t\t\t\tvar seriesItem = this.series[j];\n\t\t\t\t\tvar dataItem = data[seriesItem.alias];\n\t\t\t\t\tif (map.type == 1) {\n\t\t\t\t\t\tfor(let k = 0; k < map.valueToText.length; k++) {\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\t// Value mappings\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\tvar valueMapping = map.valueToText[k];\n\t\t\t\t\t\t\t\tconsole.debug(\"    Mapping: \" +dataItem.valueFormatted +\" =? \" +valueMapping.value);\n\t\t\t\t\t\t\t\tif (valueMapping.value === 'null') {\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else if (parseFloat(valueMapping.value) == dataItem.valueRounded) {\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +valueMapping.text);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (map.type == 2) {\n\t\t\t\t\t\tfor(let k = 0; k < map.rangeToText.length; k++) {\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\t// Range Mappings\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\tvar rangeMapping = map.rangeToText[k];\n\t\t\t\t\t\t\t\tif (rangeMapping.from === 'null' && rangeNapping.to == 'null') {\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else if (parseFloat(rangeMapping.from) <= dataItem.valueRounded && parseFloat(rangeMapping.to) >= dataItem.valueRounded) {\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +rangeMapping.text);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n  invertColorOrder() {\n    this.panel.colors.reverse();\n    this.refresh();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var templateSrv = this.templateSrv;\n    var diagramElement = elem.find('.diagram');\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\n    console.debug('found diagramContainer');\n    console.debug(diagramContainer);\n    elem.css('height', '100%');\n\n    var canvas = elem.find('.canvas')[0];\n    ctrl.canvas = canvas;\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\n\n    function updateCanvasStyle() {\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\n      var canvasContext = canvas.getContext(\"2d\");\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\n        var currentColor = ctrl.panel.colors[i];\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\n      }\n      canvasContext.fillStyle = grd;\n      canvasContext.fillRect(0, 0, canvas.width, 3);\n      ctrl.canvasContext = canvasContext;\n\n      gradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\n      gradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\n    }\n    updateCanvasStyle(); // run once at beginning so the gradients are ready on first data\n    \n    function selectElementById(container, id) {\n    \treturn d3.select(container.getElementById(id)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\n    }\n    \n    function selectElementByEdgeLabel(container, id) {\n    \treturn d3.select(container).selectAll('span')\n\t    \t.filter(function(){ \n\t\t\t\treturn d3.select(this).text() == id;\n\t    \t});\n    }\n\n    function selectElementByAlias(container, alias) {\n    \tvar targetElement = d3.select(container).selectAll('div')\n\t    \t.filter(function(){ \n\t\t\t\treturn d3.select(this).text() == alias;\n\t    \t});\n    \tvar node = targetElement.node();\n    \tif (node != null) {\n    \t\tvar parentShape = $(node).closest('.node');\n    \t\tif (parentShape.length > 0) {\n    \t\t\treturn d3.select(parentShape[0]);\n    \t\t}     \t\t\n    \t}\n    \treturn d3.select();\n    }\n    \n    function styleD3Shapes(targetElement, seriesItem) {\n    \tvar shapes = targetElement.selectAll('rect,circle,polygon');\n        shapes.style('fill', seriesItem.color);\n\n        var div = targetElement.select('div');\n        var fo = targetElement.select('foreignObject');\n        var p = div.append('p');\n        p.classed('diagram-value', true);\n        p.style('background-color', seriesItem.color);\n        p.html(seriesItem.valueFormatted);\n    }\n    \n    function styleEdgeLabel(targetElement, seriesItem) {\n    \tvar edgeParent = d3.select(targetElement.node().parentNode);\n    \tedgeParent.append('br');\n        var v = edgeParent.append('span');\n        v.classed('diagram-value', true);\n        v.style('background-color', seriesItem.color);\n        v.html(seriesItem.valueFormatted);\n    }\n    \n    function injectCustomStyle(ctrl) {\n    \tvar diagramDiv = d3.select(document.getElementById(ctrl.panel.graphId));\n    \tvar styleElement = diagramDiv.append('style');\n    \tstyleElement.text(ctrl.panel.style);\n    }\n\n    function updateStyle() {\n      var data = ctrl.svgData;\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\n      console.debug('updating svg style');\n      var svg = $(document.getElementById(ctrl.panel.graphId));\n      if (ctrl.panel.maxWidth) {\n        $(svg).css('max-width', '100%');\n      }\n\n      if (svg[0] === undefined) {\n        return;\n      }\n\n      for (var key in data) {\n        var seriesItem = data[key];\n        \n        // Find nodes by ID if we can\n        //console.info('finding targetElement');\n        var targetElement = selectElementById(svg[0], key);\n        if (!targetElement.empty()) {\n            styleD3Shapes(targetElement, seriesItem);\n            continue;\n        }\n        \n        targetElement = selectElementByEdgeLabel(svg[0], key);\n    \tif (!targetElement.empty()) {\n    \t\tstyleEdgeLabel(targetElement, seriesItem);\n    \t\tcontinue;\n    \t}\n    \t\n    \ttargetElement = selectElementByAlias(svg[0], key);\n\t\tif (!targetElement.empty()) {\n\t\t\tstyleD3Shapes(targetElement, seriesItem);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconsole.debug('couldnt not find a diagram node with id/text: ' + key);\n      }\n      \n      injectCustomStyle(ctrl);\n    } // End updateStyle()\n\n     function render() {\n      updateCanvasStyle();\n      updateStyle();\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n  // End Class\n}\n\nfunction getColorForValue(data, value) {\n  console.debug('Getting color for value');\n  console.debug(data);\n  console.debug(value);\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      console.debug('Color['+(i-1)+']: ' + data.colorMap[i]);\n      return data.colorMap[i-1];\n      //return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nfunction getColorByXPercentage(canvas, xPercent) {\n  var x = canvas.width * xPercent;\n  var context = canvas.getContext(\"2d\");\n  var p = context.getImageData(x, 1, 1, 1).data;\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\n  return color;\n}\n\nDiagramCtrl.templateUrl = 'module.html';\n\nexport {\n  DiagramCtrl,\n  DiagramCtrl as MetricsPanelCtrl\n};\n"]}