{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","mermaid","d3","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","mappingEditor","diagramStyleFormatter","mermaidAPI","panelDefaults","composites","metricCharacterReplacements","seriesOverrides","decimals","colors","styleValues","style","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","moddedSeriesVal","format","valueName","valueOptions","valueMaps","op","text","mappingTypes","name","content","mode","mermaidServiceUrl","mermaidServiceKey","themes","init","theme","securityLevel","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequence","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","initialize","parseError","handleParseError","updateDiagram","svgData","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","render","metricName","replacedText","replace","index","replacement","pattern","replacementPattern","stringToJsRegex","replaceWithText","seriesData","alias","replaceMetricCharacters","target","datapoints","unit","flotpairs","getFlotPairs","last","from","range","isOutsideRange","override","push","without","refresh","composite","ctrl","metrics","undefined","metric","mapping","type","valueToText","rangeToText","valueMap","thresholdCount","colorCount","colorIndex","splice","subItem","remove","svg","graphDefinition","substituteHashPrefixedNotation","templateSrv","diagramContainer","_this","renderCallback","svgCode","bindFunctions","html","templatedURL","scopedVars","key","method","url","headers","then","successCallback","response","clearDiagram","renderDiagram","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","applyValueMapping","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","hasOwnProperty","getWorstSeries","showLowest","copy","clone","series1","series2","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","split","strVale","Number","trim","slice","reverse","unitFormat","dataItem","valueMapping","parseFloat","rangeMapping","rangeNapping","to","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","updateCanvasStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","selectElementById","container","select","selectElementByEdgeLabel","selectAll","filter","selectDivElementByAlias","targetElement","node","parentShape","closest","selectTextElementByAlias","styleD3Shapes","shapes","div","classed","attr","clientHeight","styleFlowChartEdgeLabel","edgeParent","parentNode","v","styleTextEdgeLabel","each","el","markerBox","getBBox","y","line","insert","injectCustomStyle","diagramDiv","diagramStyleElement","customStyleElement","updateStyle","empty","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA04BA,WAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACrCC,YAAQC,KAAR,CAAc,yBAAd;AACAD,YAAQC,KAAR,CAAcH,IAAd;AACAE,YAAQC,KAAR,CAAcF,KAAd;AACA,SAAK,IAAIG,IAAIJ,KAAKK,UAAL,CAAgBC,MAA7B,EAAqCF,IAAI,CAAzC,EAA4CA,GAA5C,EAAiD;AAC/C,UAAIH,SAASD,KAAKK,UAAL,CAAgBD,IAAI,CAApB,CAAb,EAAqC;AACnCF,gBAAQC,KAAR,CAAc,YAAUC,IAAE,CAAZ,IAAe,KAAf,GAAuBJ,KAAKO,QAAL,CAAcH,CAAd,CAArC;AACA,eAAOJ,KAAKO,QAAL,CAAcH,IAAE,CAAhB,CAAP;AACA;AACD;AACF;AACD,WAAOI,EAAEC,KAAF,CAAQT,KAAKO,QAAb,CAAP;AACD;;AAED,WAASG,qBAAT,CAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAC/C,QAAIC,IAAIF,OAAOG,KAAP,GAAeF,QAAvB;AACA,QAAIG,UAAUJ,OAAOK,UAAP,CAAkB,IAAlB,CAAd;AACA,QAAIC,IAAIF,QAAQG,YAAR,CAAqBL,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCb,IAAzC;AACA,QAAImB,QAAQ,UAAU,CAACF,EAAE,CAAF,IAAO,GAAP,GAAaA,EAAE,CAAF,CAAb,GAAoB,GAApB,GAA0BA,EAAE,CAAF,CAA1B,GAAiC,GAAjC,GAAuCA,EAAE,CAAF,CAAxC,CAAV,GAA0D,GAAtE;AACA,WAAOE,KAAP;AACD;;;;AA95BMC,a;;AACAC,Q;;AACAC,gB;;AACAC,S;;AAELC,sB,kBAAAA,gB;;AAGAC,mB,eAAAA,a;AACAC,mB,eAAAA,a;AACAC,qB,eAAAA,e;AACAC,mB,eAAAA,a;;AAEKpB,O;;AAMEqB,2B,iBAAAA,qB;;;;;;;;;;;;;;;;;;;;;AAEHC,gB,GAAaV,QAAQU,U;AAErBC,mB,GAAgB;AACpBC,oBAAY,EADQ;AAEpBC,qCAA6B,EAFT;AAGpB;AACAC,yBAAiB,EAJG;AAKpB7B,oBAAY,MALQ;AAMpB8B,kBAAU,CANU,EAMP;AACbC,gBAAQ,CAAC,yBAAD,EAA4B,0BAA5B,EAAwD,wBAAxD,CAPY;AAQpBC,qBAAa,EARO;AASpBC,eAAO,EATa;AAUpBC,gBAAQ;AACNC,gBAAM,IADA;AAENC,eAAK,IAFC;AAGNC,eAAK,IAHC;AAINC,eAAK,IAJC;AAKNC,mBAAS,IALH;AAMNC,iBAAO,IAND;AAONC,oBAAU;AACRC,qBAAS,IADD;AAERP,kBAAM;AAFE;AAPJ,SAVY;AAsBpBQ,uBAAe,GAtBK;AAuBpBC,qBAAa,CAvBO;AAwBpBC,kBAAU,KAxBU;AAyBpBC,uBAAe,WAzBK;AA0BpBC,yBAAiB,CA1BG;AA2BpBC,gBAAQ,MA3BY;AA4BpBC,mBAAW,KA5BS;AA6BpBC,sBAAc,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,OAAtB,EAA+B,SAA/B,CA7BM;AA8BpBC,mBAAW,CAAC;AACVvD,iBAAO,MADG;AAEVwD,cAAI,GAFM;AAGVC,gBAAM;AAHI,SAAD,CA9BS;AAmCpBC,sBAAc,CACZ,EAACC,MAAM,eAAP,EAAwB3D,OAAO,CAA/B,EADY,EAEZ,EAAC2D,MAAM,eAAP,EAAwB3D,OAAO,CAA/B,EAFY,CAnCM;AAuCpB4D,iBAAS,eACP,+CADO,GAEP,uBAFO,GAGP,oBAHO,GAIP,WA3CkB;AA4CpBC,cAAM,SA5Cc,EA4CH;AACjBC,2BAAmB,EA7CC;AA8CpBC,2BAAmB,EA9CC;AA+CpBC,gBAAQ,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,EAA8B,SAA9B,CA/CY;AAgDpBC,cAAM;AACJC,iBAAO,MADH;AAEJC,yBAAe,OAFX;AAGJC,oBAAU,CAHN,EAGS;AACbC,0BAAgB,IAJZ,EAIkB;AACtBC,uBAAa,KALT,EAKgB;AACpBC,+BAAqB,IANjB,EAMuB;AAC3BC,qBAAW;AACTC,wBAAY,IADH;AAETC,yBAAa;AAFJ,WAPP;AAWJC,oBAAU;AACRC,4BAAgB,EADR,EACY;AACpBC,4BAAgB,EAFR,EAEY;AACpBC,yBAAa,EAHL,EAGS;AACjBjE,mBAAO,GAJC,EAII;AACZkE,oBAAQ,EALA,EAKI;AACZC,uBAAW,EANH,EAMO;AACfC,2BAAe,CAPP,EAOU;AAClBC,wBAAY,EARJ,EAQQ;AAChBC,2BAAe,EATP,EASW;AACnBC,0BAAc,IAVN,EAUY;AACpBC,6BAAiB,CAXT,EAWY;AACpBX,yBAAa,IAZL,CAYW;AAZX,WAXN;AAyBJY,iBAAO;AACLC,4BAAgB,EADX,EACe;AACpBC,uBAAW,EAFN,EAEU;AACfC,oBAAQ,CAHH,EAGM;AACXC,wBAAY,EAJP,EAIW;AAChBC,yBAAa,EALR,EAKY;AACjBC,kCAAsB,EANjB,EAMqB;AAC1BC,sBAAU,EAPL,EAOS;AACdC,wBAAY,2BARP,EAQoC;AACzCC,iCAAqB,CAThB,CASmB;AACxB;;;;;;;;;;;;;;;;;;;;;;AAVK;AAiCP;AACA;AA3DI;AAhDc,O;;yDA+GhBC,W;;;AACJ,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4C;AAAA;;AAAA,iIACpCH,MADoC,EAC5BC,SAD4B;;AAE1C3F,YAAE8F,QAAF,CAAW,OAAKC,KAAhB,EAAuBxE,aAAvB;AACA,iBAAKsE,KAAL,GAAaA,KAAb;AACA,iBAAKE,KAAL,CAAWC,OAAX,GAAqB,aAAa,OAAKD,KAAL,CAAWE,EAA7C;AACA,iBAAKC,cAAL,GAAsB,eAAe,OAAKH,KAAL,CAAWC,OAAhD;AACA,iBAAKJ,IAAL,GAAYA,IAAZ;AACA,iBAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKC,cAAL,CAAoBC,IAApB,QAAjC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKG,cAAL,CAAoBD,IAApB,QAAhC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKG,cAAL,CAAoBD,IAApB,QAArC;AACA,iBAAKE,WAAL,GAAmBzF,IAAI0F,cAAJ,EAAnB;AACA,iBAAKC,iBAAL;AAX0C;AAY3C;;;;8CAEmB;AAClBpF,uBAAWqF,UAAX,CAAsB,KAAKZ,KAAL,CAAWrC,IAAjC;AACApC,uBAAWsF,UAAX,GAAwB,KAAKC,gBAAL,CAAsBP,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;wCAEY;AACX,iBAAKI,iBAAL;AACA,iBAAKI,aAAL,CAAmB,KAAKC,OAAxB;AACD;;;2CAEgBC,G,EAAKC,I,EAAM;AAC1B,iBAAKC,KAAL,GAAa,oCAAb;AACA,iBAAKC,SAAL,GAAiB,KAAKvB,IAAL,CAAUwB,WAAV,CAAsB,oCAAoCJ,GAApC,GAA0C,QAAhE,CAAjB;AACD;;;2CAEgB;AACf,iBAAKK,YAAL,CAAkB,SAAlB,EAA6BpG,aAA7B,EAA4C,CAA5C;AACA,iBAAKoG,YAAL,CAAkB,SAAlB,EAA6BnG,aAA7B,EAA4C,CAA5C;AACA,iBAAKmG,YAAL,CAAkB,mBAAlB,EAAuClG,eAAvC,EAAwD,CAAxD;AACA,iBAAKkG,YAAL,CAAkB,gBAAlB,EAAoCjG,aAApC,EAAmD,CAAnD;AACD;;;gDAEqB;AACpB,mBAAOkG,EAAEC,SAASC,cAAT,CAAwB,KAAKtB,cAA7B,CAAF,CAAP;AACD;;;yCAEcuB,Q,EAAU;AACvB/H,oBAAQC,KAAR,CAAc,eAAd;AACAD,oBAAQC,KAAR,CAAc8H,QAAd;AACA,iBAAKC,MAAL,GAAcD,SAASE,GAAT,CAAa,KAAKC,aAAL,CAAmBtB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACA5G,oBAAQC,KAAR,CAAc,2BAAd;AACAD,oBAAQC,KAAR,CAAc,KAAK+H,MAAnB;AACA,gBAAIlI,OAAO,KAAKqI,SAAL,EAAX;AACA;AACA,iBAAKd,OAAL,GAAevH,IAAf;AACA,iBAAKsH,aAAL,CAAmBtH,IAAnB;AACA,iBAAKsI,MAAL;AACD;;;kDAEuBC,U,EAAY;AAClC;AACA,gBAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC,OAAO,uCAAP;AACpC,gBAAIC,eAAeD,WAAWE,OAAX,CAAmB,gBAAnB,EAAqC,GAArC,CAAnB;AACA,iBAAK,IAAIC,KAAT,IAAkB,KAAKnC,KAAL,CAAWtE,2BAA7B,EAA0D;AACxD,kBAAI0G,cAAc,KAAKpC,KAAL,CAAWtE,2BAAX,CAAuCyG,KAAvC,CAAlB;AACA;AACA,kBAAIE,UAAUD,YAAYE,kBAA1B;AACA;AACA,kBAAID,QAAQtI,MAAR,KAAmB,CAAvB,EAA0B;AAC1B;AACA,kBAAIsI,QAAQ,CAAR,MAAe,GAAnB,EAAwB;AACtBA,0BAAUrH,IAAIuH,eAAJ,CAAoBH,YAAYE,kBAAhC,CAAV;AACD;AACDL,6BAAeA,aAAaC,OAAb,CACbG,OADa,EAEbD,YAAYI,eAFC,CAAf;AAID;AACD,mBAAOP,YAAP;AACD;;;wCAEaQ,U,EAAY;AACxB,gBAAIC,QAAQ,KAAKC,uBAAL,CAA6BF,WAAWG,MAAxC,CAAZ;AACA,gBAAIjB,SAAS,IAAI5G,UAAJ,CAAe;AAC1B8H,0BAAYJ,WAAWI,UADG;AAE1BH,qBAAOA,KAFmB;AAG1BI,oBAAML,WAAWK;AAHS,aAAf,CAAb;AAKAnB,mBAAOoB,SAAP,GAAmBpB,OAAOqB,YAAP,CAAoB,KAAKhD,KAAL,CAAWpD,aAA/B,CAAnB;AACA,gBAAIiG,aAAaJ,WAAWI,UAAX,IAAyB,EAA1C;AACA,gBAAIA,cAAcA,WAAW9I,MAAX,GAAoB,CAAtC,EAAyC;AACvC,kBAAIkJ,OAAOJ,WAAWA,WAAW9I,MAAX,GAAoB,CAA/B,EAAkC,CAAlC,CAAX;AACA,kBAAImJ,OAAO,KAAKC,KAAL,CAAWD,IAAtB;AACA,kBAAID,OAAOC,IAAP,GAAc,CAAC,KAAnB,EAA0B;AACxBvB,uBAAOyB,cAAP,GAAwB,IAAxB;AACD;AACF;AACD,mBAAOzB,MAAP;AACD;;;4CAEiB0B,Q,EAAU;AAC1B,iBAAKrD,KAAL,CAAWrE,eAAX,CAA2B2H,IAA3B,CAAgCD,YAAY,EAA5C;AACD;;;+CAEoBA,Q,EAAU;AAC7B,iBAAKrD,KAAL,CAAWrE,eAAX,GAA6B1B,EAAEsJ,OAAF,CAAU,KAAKvD,KAAL,CAAWrE,eAArB,EAAsC0H,QAAtC,CAA7B;AACA,iBAAKG,OAAL;AACD;;;uCAEYC,S,EAAW;AACtB,iBAAKzD,KAAL,CAAWvE,UAAX,CAAsB6H,IAAtB,CAA2BG,aAAa,EAAxC;AACD;;;0CACeA,S,EAAW;AACzB,iBAAKzD,KAAL,CAAWvE,UAAX,GAAwBxB,EAAEsJ,OAAF,CAAU,KAAKvD,KAAL,CAAWvE,UAArB,EAAiCgI,SAAjC,CAAxB;AACA,iBAAKD,OAAL;AACD;;;wDAC6B;AAC5B,mBAAOvJ,EAAE2H,GAAF,CAAM,KAAKjC,MAAL,CAAY+D,IAAZ,CAAiB/B,MAAvB,EAA+B,UAASA,MAAT,EAAiB;AACrD,qBAAOA,OAAOe,KAAd;AACD,aAFM,CAAP;AAGD;;;+CAEoBe,S,EAAW;AAC9B,gBAAIA,UAAUE,OAAV,KAAsBC,SAA1B,EAAqC;AACnCH,wBAAUE,OAAV,GAAoB,CAAC,EAAD,CAApB;AACD,aAFD,MAEO;AACLF,wBAAUE,OAAV,CAAkBL,IAAlB,CAAuB,EAAvB;AACD;AACD,iBAAKE,OAAL;AACD;;;oDACyBC,S,EAAWI,M,EAAQ;AAC3CJ,sBAAUE,OAAV,GAAoB1J,EAAEsJ,OAAF,CAAUE,UAAUE,OAApB,EAA6BE,MAA7B,CAApB;AACA,iBAAKL,OAAL;AACD;;;wDAE6BpB,W,EAAa;AACzC,iBAAKpC,KAAL,CAAWtE,2BAAX,CAAuC4H,IAAvC,CAA4ClB,eAAe;AACzDE,kCAAoB,EADqC;AAEzDE,+BAAiB;AAFwC,aAA3D;AAID;;;2DACgCJ,W,EAAa;AAC5C,iBAAKpC,KAAL,CAAWtE,2BAAX,GAAyCzB,EAAEsJ,OAAF,CAAU,KAAKvD,KAAL,CAAWtE,2BAArB,EAAkD0G,WAAlD,CAAzC;AACA,iBAAKoB,OAAL;AACD;;;0CAEeM,O,EAAS;AACvB,iBAAK9D,KAAL,CAAW/C,SAAX,CAAqBqG,IAArB,CAA0BQ,WAAW,EAArC;AACD;;;6CAEkBA,O,EAAS;AAC1B,iBAAK9D,KAAL,CAAW/C,SAAX,GAAuBhD,EAAEsJ,OAAF,CAAU,KAAKvD,KAAL,CAAW/C,SAArB,EAAgC6G,OAAhC,CAAvB;AACD;;;iDAEsBA,O,EAAS;AAC9B,gBAAIA,QAAQC,IAAR,IAAgB,CAApB,EAAuB;AACrB,kBAAID,QAAQE,WAAR,KAAwBJ,SAA5B,EAAuC;AACrCE,wBAAQE,WAAR,GAAsB,CAAC,EAAD,CAAtB;AACD,eAFD,MAEO;AACLF,wBAAQE,WAAR,CAAoBV,IAApB,CAAyB,EAAzB;AACD;AACF,aAND,MAMO,IAAIQ,QAAQC,IAAR,IAAgB,CAApB,EAAuB;AAC5B,kBAAID,QAAQG,WAAR,KAAwBL,SAA5B,EAAuC;AACrCE,wBAAQG,WAAR,GAAsB,CAAC,EAAD,CAAtB;AACD,eAFD,MAEO;AACLH,wBAAQG,WAAR,CAAoBX,IAApB,CAAyB,EAAzB;AACD;AACF;AACF;;;sDAE2BY,Q,EAAUJ,O,EAAS;AAC7C,gBAAII,SAASH,IAAT,IAAiB,CAArB,EAAwB;AACtBG,uBAASF,WAAT,GAAuB/J,EAAEsJ,OAAF,CAAUW,SAASF,WAAnB,EAAgCF,OAAhC,CAAvB;AACD,aAFD,MAEO,IAAII,SAASH,IAAT,IAAiB,CAArB,EAAwB;AAC7BG,uBAASD,WAAT,GAAuBhK,EAAEsJ,OAAF,CAAUW,SAASD,WAAnB,EAAgCH,OAAhC,CAAvB;AACD;AACF;;;6CAEkB;AACjB,gBAAIK,iBAAiB,KAAKnE,KAAL,CAAWlG,UAAX,CAAsBC,MAA3C;AACA,gBAAIqK,aAAa,KAAKpE,KAAL,CAAWnE,MAAX,CAAkB9B,MAAnC;AACA,iBAAKyJ,OAAL;AACD;;;sCAEWa,U,EAAYzJ,K,EAAO;AAC7B,iBAAKoF,KAAL,CAAWnE,MAAX,CAAkBwI,UAAlB,IAAgCzJ,KAAhC;AACD;;;sCAEWyJ,U,EAAY;AACtB,iBAAKrE,KAAL,CAAWnE,MAAX,CAAkByI,MAAlB,CAAyBD,UAAzB,EAAqC,CAArC;AACD;;;qCAEU;AACT,iBAAKrE,KAAL,CAAWnE,MAAX,CAAkByH,IAAlB,CAAuB,wBAAvB;AACD;;;wCAEaiB,O,EAAS;AACrB,iBAAKvE,KAAL,CAAWlD,MAAX,GAAoByH,QAAQ7K,KAA5B;AACA,iBAAK8J,OAAL;AACD;;;yCAEc;AACb,gBAAIjC,EAAE,MAAI,KAAKvB,KAAL,CAAWC,OAAjB,EAA0BlG,MAA9B,EAAsC;AACpCwH,gBAAE,MAAM,KAAKvB,KAAL,CAAWC,OAAnB,EAA4BuE,MAA5B;AACD;AACD,iBAAKC,GAAL,GAAW,EAAX;AACD;;;wCAEaC,e,EAAiBjL,I,EAAM;AACnC;AACA;AACA;AACA;AACAiL,8BAAkB,KAAKC,8BAAL,CAAoCD,eAApC,EAAqDjL,IAArD,CAAlB;AACAiL,8BAAkB,KAAKE,WAAL,CAAiBpC,eAAjB,CAAiCkC,eAAjC,CAAlB;AACA,gBAAIG,mBAAmBtD,EAAEC,SAASC,cAAT,CAAwB,KAAKtB,cAA7B,CAAF,CAAvB;AACA,gBAAI2E,QAAQ,IAAZ;AACA,gBAAIC,iBAAiB,SAAjBA,cAAiB,CAASC,OAAT,EAAkBC,aAAlB,EAAiC;AACpD,kBAAID,YAAY,EAAhB,EAAoB;AAClBH,iCAAiBK,IAAjB,CAAsB,gDAAtB;AACD,eAFD,MAEO;AACLL,iCAAiBK,IAAjB,CAAsBF,OAAtB;AACA,oBAAIC,aAAJ,EAAmB;AACjBA,gCAAcJ,iBAAiB,CAAjB,CAAd;AACD;AACDlL,wBAAQC,KAAR,CAAc,wCAAd;AACA;AACAkL,sBAAM9D,OAAN,GAAgBvH,IAAhB;AACA;AACAqL,sBAAM/C,MAAN;AACD;AACF,aAdD;;AAgBA,gBAAI;AACF;AACAxG,yBAAWwG,MAAX,CAAkB,KAAK/B,KAAL,CAAWC,OAA7B,EAAsCyE,eAAtC,EAAuDK,cAAvD,EAAuEF,iBAAiB,CAAjB,CAAvE;AACD,aAHD,CAGE,OAAO5D,GAAP,EAAY;AACZ4D,+BAAiBK,IAAjB,CAAsB,oEAAmEjE,GAAnE,GAAyE,MAA/F;AACD;AACF;;;wCAEaxH,I,EAAM;AAClB,gBAAI,KAAKuG,KAAL,CAAW1C,OAAX,CAAmBvD,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,kBAAIwD,OAAO,KAAKyC,KAAL,CAAWzC,IAAtB;AACA,kBAAIA,QAAQ,KAAZ,EAAmB;AACjB,oBAAI4H,eAAe,KAAKP,WAAL,CAAiB1C,OAAjB,CAAyB,KAAKlC,KAAL,CAAWxC,iBAApC,EAAuD,KAAKwC,KAAL,CAAWoF,UAAlE,CAAnB;AACA,oBAAIN,QAAQ,IAAZ;AACA,oBAAIO,MAAM,KAAKrF,KAAL,CAAWvC,iBAArB;AACA,qBAAKqC,KAAL,CAAW;AACTwF,0BAAQ,KADC;AAETC,uBAAKJ,YAFI;AAGTK,2BAAS;AACP,8BAAU,2CADH;AAEP,iCAAaH;AAFN;AAHA,iBAAX,EAOGI,IAPH,CAOQ,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACzC;AACA;AACAb,wBAAMc,YAAN;AACAd,wBAAMe,aAAN,CAAoBF,SAASlM,IAA7B,EAAmCA,IAAnC;AACD,iBAZD,EAYG,SAASqM,aAAT,CAAuBH,QAAvB,EAAiC;AAClChM,0BAAQoM,IAAR,CAAa,OAAb,EAAsBJ,QAAtB;AACD,iBAdD;AAeD,eAnBD,MAmBO;AACL,qBAAKC,YAAL;AACA,qBAAKC,aAAL,CAAmB,KAAK7F,KAAL,CAAW1C,OAA9B,EAAuC7D,IAAvC;AACD;AACF;AACF;;;yDAwB8BiL,e,EAAiBjL,I,EAAM;AACpD;AACA;AACA,gBAAIuM,UAAUtB,gBAAgBuB,KAAhB,CAAsB,mBAAtB,CAAd;AACA,gBAAID,YAAY,IAAhB,EAAsB,OAAOtB,eAAP;AACtB;AACA,iBAAK,IAAI7K,IAAI,CAAb,EAAgBA,IAAImM,QAAQjM,MAA5B,EAAoCF,GAApC,EAAyC;AACvC,kBAAIqM,SAASF,QAAQnM,CAAR,CAAb;AACA,kBAAIsM,YAAYD,OAAO,CAAP,CAAhB;AACAA,uBAASA,OAAOE,SAAP,CAAiB,CAAjB,CAAT;AACA;AACA,mBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKrG,KAAL,CAAWvE,UAAX,CAAsB1B,MAA1C,EAAkDsM,GAAlD,EAAuD;AACrD,oBAAIC,aAAa,KAAKtG,KAAL,CAAWvE,UAAX,CAAsB4K,CAAtB,CAAjB;AACA,oBAAIC,WAAWjJ,IAAX,KAAoB6I,MAAxB,EAAgC;AAC9B;AACA,sBAAIK,iBAAiB,IAArB;AACA,0BAAQJ,SAAR;AACE,yBAAK,GAAL;AACEI,uCAAiB9M,KAAK6M,WAAWjJ,IAAhB,EAAsB3D,KAAvC;AACAgL,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMgE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB9M,KAAK6M,WAAWjJ,IAAhB,EAAsBmJ,2BAAvC;AACA9B,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMgE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB9M,KAAK6M,WAAWjJ,IAAhB,EAAsBoJ,cAAvC;AACA/B,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMgE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB9M,KAAK6M,WAAWjJ,IAAhB,EAAsBqJ,wBAAvC;AACAhC,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMgE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AAhBJ;AAkBD;AACF;AACD;AACA,mBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKhF,MAAL,CAAY5H,MAAhC,EAAwC4M,GAAxC,EAA6C;AAC3C,oBAAIC,aAAa,KAAKjF,MAAL,CAAYgF,CAAZ,CAAjB;AACA,oBAAIC,WAAWlE,KAAX,KAAqBwD,MAAzB,EAAiC;AAC/B,sBAAIK,iBAAiB,IAArB;AACA,0BAAQJ,SAAR;AACE,yBAAK,GAAL;AACEI,uCAAiB9M,KAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAxC;AACAgL,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMgE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiB9M,KAAKmN,WAAWlE,KAAhB,EAAuB+D,cAAxC;AACA/B,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMgE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AARJ;AAUD;AACF;AACF;AACD,mBAAO7B,eAAP;AACD;;;sCAEW;AACV,gBAAIjL,OAAO,EAAX;AACA,gBAAI,KAAKkI,MAAL,IAAe,KAAKA,MAAL,CAAY5H,MAAZ,GAAqB,CAAxC,EAA2C;AACzC,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAI,KAAK8H,MAAL,CAAY5H,MAAhC,EAAwCF,GAAxC,EAA6C;AAC3C,oBAAI+M,aAAa,KAAKjF,MAAL,CAAY9H,CAAZ,CAAjB;AACAF,wBAAQC,KAAR,CAAc,2BAAd;AACAD,wBAAQC,KAAR,CAAcgN,UAAd;AACAnN,qBAAKmN,WAAWlE,KAAhB,IAAyB,KAAKmE,cAAL,CAAoBD,WAAWlE,KAA/B,CAAzB;AACA;AACAjJ,qBAAKmN,WAAWlE,KAAhB,EAAuBA,KAAvB,GAA+BkE,WAAWlE,KAA1C;AACA,oBAAIoE,YAAY7M,EAAEgJ,IAAF,CAAO2D,WAAW/D,UAAlB,CAAhB;AACA,oBAAIkE,YAAY9M,EAAE+M,OAAF,CAAUF,SAAV,IAAuBA,UAAU,CAAV,CAAvB,GAAsC,IAAtD;;AAEA,oBAAI,KAAK9G,KAAL,CAAWjD,SAAX,KAAyB,MAA7B,EAAqC;AACnCtD,uBAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAvB,GAA+B,CAA/B;AACAD,uBAAKmN,WAAWlE,KAAhB,EAAuBuE,YAAvB,GAAsC,CAAtC;AACAxN,uBAAKmN,WAAWlE,KAAhB,EAAuBwE,aAAvB,GAAuCN,WAAWlE,KAAlD;AACD,iBAJD,MAIO,IAAIzI,EAAEkN,QAAF,CAAWJ,SAAX,CAAJ,EAA2B;AAChCtN,uBAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAvB,GAA+B,CAA/B;AACAD,uBAAKmN,WAAWlE,KAAhB,EAAuBwE,aAAvB,GAAuCjN,EAAEmN,MAAF,CAASL,SAAT,CAAvC;AACAtN,uBAAKmN,WAAWlE,KAAhB,EAAuBuE,YAAvB,GAAsC,CAAtC;AACD,iBAJM,MAIA;AACLxN,uBAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAvB,GAA+BkN,WAAWS,KAAX,CAAiB5N,KAAKmN,WAAWlE,KAAhB,EAAuB3F,SAAxC,CAA/B;AACA,sBAAIuK,cAAc,KAAKC,mBAAL,CAAyB9N,KAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAhD,CAAlB;AACA,sBAAI8N,aAAaxM,IAAIyM,YAAJ,CAAiBhO,KAAKmN,WAAWlE,KAAhB,EAAuB5F,MAAxC,CAAjB;AACA;AACArD,uBAAKmN,WAAWlE,KAAhB,EAAuB+D,cAAvB,GAAwCe,WAAW/N,KAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAlC,EAAyC4N,YAAY1L,QAArD,EAA+D0L,YAAYI,cAA3E,CAAxC;AACAjO,uBAAKmN,WAAWlE,KAAhB,EAAuBuE,YAAvB,GAAsCjM,IAAI2M,UAAJ,CAAelO,KAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAtC,EAA6C4N,YAAY1L,QAAzD,CAAtC;AACD;AACD,oBAAI,KAAKoE,KAAL,CAAWhE,MAAX,CAAkBO,QAAlB,CAA2BC,OAA/B,EAAwC;AACtC/C,uBAAKmN,WAAWlE,KAAhB,EAAuB9H,KAAvB,GAA+B,KAAKgN,mBAAL,CAAyBnO,KAAKmN,WAAWlE,KAAhB,EAAuBmF,SAAhD,EAA2DpO,KAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAAlF,CAA/B;AACD,iBAFD,MAEO;AACLD,uBAAKmN,WAAWlE,KAAhB,EAAuB9H,KAAvB,GAA+BpB,iBAAiBC,KAAKmN,WAAWlE,KAAhB,EAAuBmF,SAAxC,EAAmDpO,KAAKmN,WAAWlE,KAAhB,EAAuBhJ,KAA1E,CAA/B;AACD;AACF;AACF;AACD;AACA,iBAAKoO,iBAAL,CAAuBrO,IAAvB;AACA;AACA,iBAAK,IAAII,KAAI,CAAb,EAAgBA,KAAI,KAAKmG,KAAL,CAAWvE,UAAX,CAAsB1B,MAA1C,EAAkDF,IAAlD,EAAuD;AACrD,kBAAIyM,aAAa,KAAKtG,KAAL,CAAWvE,UAAX,CAAsB5B,EAAtB,CAAjB;AACA,kBAAIkO,qBAAqB,IAAzB;AACA,kBAAIC,yBAAyB,IAA7B;AACA,mBAAK,IAAI3B,IAAI,CAAb,EAAgBA,IAAIC,WAAW3C,OAAX,CAAmB5J,MAAvC,EAA+CsM,GAA/C,EAAoD;AACrD,oBAAI4B,UAAU3B,WAAW3C,OAAX,CAAmB0C,CAAnB,CAAd;AACA,oBAAI6B,aAAaD,QAAQC,UAAzB;AACG;AACA,oBAAI,CAACzO,KAAK0O,cAAL,CAAoBD,UAApB,CAAL,EAAsC;AACrC;AACA;AACD,oBAAItB,cAAanN,KAAKyO,UAAL,CAAjB;AACA;AACA,oBAAIH,uBAAuB,IAA3B,EAAiC;AAC/BA,uCAAqBnB,WAArB;AACD,iBAFD,MAEO;AACLmB,uCAAqB,KAAKK,cAAL,CAAoBL,kBAApB,EAAwCnB,WAAxC,EAAoDN,WAAW+B,UAA/D,CAArB;AACD;AACF;AACD;AACA,kBAAIN,uBAAuB,IAA3B,EAAiC;AAClC,oBAAIO,OAAOrO,EAAEsO,KAAF,CAAQR,kBAAR,CAAX;AACAO,qBAAK5B,wBAAL,GAAgCqB,mBAAmBrF,KAAnB,GAA2B,IAA3B,GAAkCqF,mBAAmBtB,cAArF;AACA6B,qBAAK9B,2BAAL,GAAmCuB,mBAAmBrF,KAAnB,GAA2B,IAA3B,GAAkCqF,mBAAmBrO,KAAxF;AACA4O,qBAAK7B,cAAL,GAAsBsB,mBAAmBrF,KAAnB,GAA2B,IAA3B,GAAkCqF,mBAAmBtB,cAA3E;AACG;AACAhN,qBAAK6M,WAAWjJ,IAAhB,IAAwBiL,IAAxB;AACD;AACF;AACD,mBAAO7O,IAAP;AACD;;;yCAEc+O,O,EAASC,O,EAASJ,U,EAAY;AAC3C,gBAAIA,UAAJ,EAAgB;AACf;AACA,qBAAOG,QAAQ9O,KAAR,GAAgB+O,QAAQ/O,KAAxB,GAAgC8O,OAAhC,GAA0CC,OAAjD;AACA,aAHD,MAGO;AACN;AACA,qBAAOD,QAAQ9O,KAAR,GAAgB+O,QAAQ/O,KAAxB,GAAgC8O,OAAhC,GAA0CC,OAAjD;AACA;AACF;;;8CAEmBhP,I,EAAMC,K,EAAO;AAC/BC,oBAAQC,KAAR,CAAc,4BAAd;AACAD,oBAAQC,KAAR,CAAcH,IAAd;AACAE,oBAAQC,KAAR,CAAcF,KAAd;AACA,gBAAIwC,MAAMwM,KAAKxM,GAAL,CAASyM,KAAT,CAAeD,IAAf,EAAqBjP,KAAKK,UAA1B,CAAV;AACA,gBAAIqC,MAAMuM,KAAKvM,GAAL,CAASwM,KAAT,CAAeD,IAAf,EAAqBjP,KAAKK,UAA1B,CAAV;AACA,gBAAI8O,mBAAmBzM,MAAMD,GAA7B;AACA,gBAAI2M,uBAAuBnP,QAAQwC,GAAnC;AACA,gBAAI7B,WAAWwO,uBAAuBD,gBAAtC;AACA;AACAvO,uBAAWqO,KAAKxM,GAAL,CAAS,KAAT,EAAgB7B,QAAhB,CAAX;AACA;AACAA,uBAAWqO,KAAKvM,GAAL,CAAS,KAAT,EAAgB9B,QAAhB,CAAX;AACA,gBAAIZ,KAAKqP,YAAT,EAAuB;AACrBzO,yBAAW,IAAIA,QAAf;AACD;;AAED,mBAAOF,sBAAsB,KAAKC,MAA3B,EAAmCC,QAAnC,CAAP;AACD;;;yCAEc0O,e,EAAiB;AAC9B,gBAAInC,aAAa,EAAjB;AAAA,gBACEiB,YAAY,EADd;AAAA,gBAEEmB,YAAY,EAFd;;AAIArP,oBAAQC,KAAR,CAAc,mCAAd;AACAD,oBAAQC,KAAR,CAAcmP,eAAd;AACApP,oBAAQC,KAAR,CAAc,KAAKoG,KAAL,CAAWrE,eAAzB;AACA,iBAAK,IAAI9B,IAAI,CAAb,EAAgBA,IAAI,KAAKmG,KAAL,CAAWrE,eAAX,CAA2B5B,MAA/C,EAAuDF,GAAvD,EAA4D;AAC1DF,sBAAQC,KAAR,CAAc,YAAd;AACAD,sBAAQC,KAAR,CAAc,KAAKoG,KAAL,CAAWrE,eAAX,CAA2B9B,CAA3B,CAAd;;AAEA,kBAAI,KAAKmG,KAAL,CAAWrE,eAAX,CAA2B9B,CAA3B,CAAJ,EAAmC;AACjC,oBAAIoP,QAAQjO,IAAIuH,eAAJ,CAAoB,KAAKvC,KAAL,CAAWrE,eAAX,CAA2B9B,CAA3B,EAA8B6I,KAAlD,CAAZ;AACA,oBAAIsD,UAAU+C,gBAAgB9C,KAAhB,CAAsBgD,KAAtB,CAAd;AACA,oBAAIjD,WAAWA,QAAQjM,MAAR,GAAiB,CAAhC,EAAmC;AACjCiP,8BAAY,KAAKhJ,KAAL,CAAWrE,eAAX,CAA2B9B,CAA3B,CAAZ;AACD;AACF;AACF;AACDgO,sBAAU/N,UAAV,GAAuB,CAACkP,UAAUlP,UAAV,IAAwB,KAAKkG,KAAL,CAAWlG,UAApC,EAAgDoP,KAAhD,CAAsD,GAAtD,EAA2DtH,GAA3D,CAA+D,UAASuH,OAAT,EAAkB;AACtG,qBAAOC,OAAOD,QAAQE,IAAR,EAAP,CAAP;AACD,aAFsB,CAAvB;AAGAxB,sBAAU7N,QAAV,GAAqB,KAAKgG,KAAL,CAAWnE,MAAX,CAAkByN,KAAlB,EAArB;AACAzB,sBAAUiB,YAAV,GAAyBE,UAAUF,YAAV,IAA0B,KAAnD;AACA,gBAAIjB,UAAUiB,YAAd,EAA4B;AAC1BjB,wBAAU7N,QAAV,CAAmBuP,OAAnB;AACD;AACD3C,uBAAWiB,SAAX,GAAuBA,SAAvB;;AAEAjB,uBAAW7J,SAAX,GAAuBiM,UAAUjM,SAAV,IAAuB,KAAKiD,KAAL,CAAWjD,SAAzD;;AAEA6J,uBAAW9J,MAAX,GAAoBkM,UAAUQ,UAAV,IAAwB,KAAKxJ,KAAL,CAAWlD,MAAvD;AACA,mBAAO8J,UAAP;AACD;;;4CAEgBnN,I,EAAM;AACvB,iBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKmG,KAAL,CAAW/C,SAAX,CAAqBlD,MAAzC,EAAiDF,GAAjD,EAAsD;AACrD,kBAAI+H,MAAM,KAAK5B,KAAL,CAAW/C,SAAX,CAAqBpD,CAArB,CAAV;AACA,kBAAI,CAAE+H,IAAIuG,cAAJ,CAAmB,OAAnB,CAAN,EACC;AACD,kBAAIc,QAAQjO,IAAIuH,eAAJ,CAAoBX,IAAIc,KAAxB,CAAZ;AACA/I,sBAAQC,KAAR,CAAc,uBAAsBgI,IAAIc,KAAxC;AACA,mBAAI,IAAI2D,IAAI,CAAZ,EAAeA,IAAI,KAAK1E,MAAL,CAAY5H,MAA/B,EAAuCsM,GAAvC,EAA4C;AAC3C,oBAAIL,UAAU,KAAKrE,MAAL,CAAY0E,CAAZ,EAAe3D,KAAf,CAAqBuD,KAArB,CAA2BgD,KAA3B,CAAd;AACAtP,wBAAQC,KAAR,CAAc,eAAc,KAAK+H,MAAL,CAAY0E,CAAZ,EAAe3D,KAA3C;AACA,oBAAIsD,WAAWA,QAAQjM,MAAR,GAAiB,CAAhC,EAAmC;AAClC,sBAAI6M,aAAa,KAAKjF,MAAL,CAAY0E,CAAZ,CAAjB;AACA,sBAAIoD,WAAWhQ,KAAKmN,WAAWlE,KAAhB,CAAf;AACA,sBAAId,IAAImC,IAAJ,IAAY,CAAhB,EAAmB;AAClB,yBAAI,IAAI4C,IAAI,CAAZ,EAAeA,IAAI/E,IAAIoC,WAAJ,CAAgBjK,MAAnC,EAA2C4M,GAA3C,EAAgD;AAC9C;AACA;AACA;AACA,0BAAI+C,eAAe9H,IAAIoC,WAAJ,CAAgB2C,CAAhB,CAAnB;AACAhN,8BAAQC,KAAR,CAAc,kBAAiB6P,SAAShD,cAA1B,GAA0C,MAA1C,GAAkDiD,aAAahQ,KAA7E;AACA,0BAAIgQ,aAAahQ,KAAb,KAAuB,MAA3B,EAAmC;AAClC,4BAAI+P,SAAS/P,KAAT,KAAmB,IAAnB,IAA2B+P,SAAS/P,KAAT,KAAmB,KAAK,CAAvD,EAA0D;AACzD+P,mCAAShD,cAAT,GAA0BiD,aAAavM,IAAvC;AACA;AACA;AACD;AACA,uBAND,MAMO,IAAIwM,WAAWD,aAAahQ,KAAxB,KAAkC+P,SAASxC,YAA/C,EAA6D;AACnEwC,iCAAShD,cAAT,GAA0BiD,aAAavM,IAAvC;AACAxD,gCAAQC,KAAR,CAAc,yBAAwBgN,WAAWlE,KAAnC,GAA0C,IAA1C,GAAgD+G,SAASxC,YAAzD,GAAuE,MAAvE,GAA+EyC,aAAavM,IAA1G;AACA;AACA;AACF;AACD,mBAnBD,MAmBO,IAAIyE,IAAImC,IAAJ,IAAY,CAAhB,EAAmB;AACzB,yBAAI,IAAI4C,KAAI,CAAZ,EAAeA,KAAI/E,IAAIqC,WAAJ,CAAgBlK,MAAnC,EAA2C4M,IAA3C,EAAgD;AAC9C;AACA;AACA;AACA,0BAAIiD,eAAehI,IAAIqC,WAAJ,CAAgB0C,EAAhB,CAAnB;AACA,0BAAIiD,aAAa1G,IAAb,KAAsB,MAAtB,IAAgC2G,aAAaC,EAAb,IAAmB,MAAvD,EAA+D;AAC9D,4BAAIL,SAAS/P,KAAT,KAAmB,IAAnB,IAA2B+P,SAAS/P,KAAT,KAAmB,KAAK,CAAvD,EAA0D;AACzD+P,mCAAShD,cAAT,GAA0BmD,aAAazM,IAAvC;AACA;AACA;AACD;AACA,uBAND,MAMO,IAAIwM,WAAWC,aAAa1G,IAAxB,KAAiCuG,SAASxC,YAA1C,IAA0D0C,WAAWC,aAAaE,EAAxB,KAA+BL,SAASxC,YAAtG,EAAoH;AAC1HwC,iCAAShD,cAAT,GAA0BmD,aAAazM,IAAvC;AACAxD,gCAAQC,KAAR,CAAc,yBAAwBgN,WAAWlE,KAAnC,GAA0C,IAA1C,GAAgD+G,SAASxC,YAAzD,GAAuE,MAAvE,GAA+E2C,aAAazM,IAA1G;AACA;AACA;AACD;AACF;AACD;AACD;AACD;AACD;;;6CAEmB;AACjB,iBAAK6C,KAAL,CAAWnE,MAAX,CAAkB0N,OAAlB;AACA,iBAAK/F,OAAL;AACD;;;8CAEmB9J,K,EAAO;AACzB,gBAAIO,EAAE8P,QAAF,CAAW,KAAK/J,KAAL,CAAWpE,QAAtB,CAAJ,EAAqC;AACnC,qBAAO;AACLA,0BAAU,KAAKoE,KAAL,CAAWpE,QADhB;AAEL8L,gCAAgB;AAFX,eAAP;AAID;;AAED,gBAAIsC,QAAQtQ,QAAQ,CAApB;AACA,gBAAIuQ,MAAM,CAACvB,KAAKwB,KAAL,CAAWxB,KAAKyB,GAAL,CAASH,KAAT,IAAkBtB,KAAK0B,IAAlC,CAAX;;AAEA,gBAAIC,OAAO3B,KAAK4B,GAAL,CAAS,EAAT,EAAa,CAACL,GAAd,CAAX;AAAA,gBACEM,OAAOP,QAAQK,IADjB;AAAA,gBACuB;AACrBG,gBAFF;;AAIA,gBAAID,OAAO,GAAX,EAAgB;AACdC,qBAAO,CAAP;AACD,aAFD,MAEO,IAAID,OAAO,CAAX,EAAc;AACnBC,qBAAO,CAAP;AACA;AACA,kBAAID,OAAO,IAAX,EAAiB;AACfC,uBAAO,GAAP;AACA,kBAAEP,GAAF;AACD;AACF,aAPM,MAOA,IAAIM,OAAO,GAAX,EAAgB;AACrBC,qBAAO,CAAP;AACD,aAFM,MAEA;AACLA,qBAAO,EAAP;AACD;;AAEDA,oBAAQH,IAAR;;AAEA;AACA,gBAAI3B,KAAKwB,KAAL,CAAWxQ,KAAX,MAAsBA,KAA1B,EAAiC;AAC/BuQ,oBAAM,CAAN;AACD;;AAED,gBAAIQ,SAAS,EAAb;AACAA,mBAAO7O,QAAP,GAAkB8M,KAAKvM,GAAL,CAAS,CAAT,EAAY8N,GAAZ,CAAlB;AACAQ,mBAAO/C,cAAP,GAAwB+C,OAAO7O,QAAP,GAAkB8M,KAAKwB,KAAL,CAAWxB,KAAKyB,GAAL,CAASK,IAAT,IAAiB9B,KAAK0B,IAAjC,CAAlB,GAA2D,CAAnF;;AAEA,mBAAOK,MAAP;AACD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOlH,I,EAAM;AAC7B,gBAAIkB,cAAc,KAAKA,WAAvB;AACA,gBAAIiG,iBAAiBF,KAAKG,IAAL,CAAU,UAAV,CAArB;AACAD,2BAAeE,MAAf,CAAsB,cAAcrH,KAAKvD,cAAnB,GAAoC,UAA1D;AACA,gBAAI0E,mBAAmBtD,EAAEC,SAASC,cAAT,CAAwBiC,KAAKvD,cAA7B,CAAF,CAAvB;AACAxG,oBAAQC,KAAR,CAAc,wBAAd;AACAD,oBAAQC,KAAR,CAAciL,gBAAd;AACA8F,iBAAKK,GAAL,CAAS,QAAT,EAAmB,MAAnB;;AAEA,gBAAI5Q,SAASuQ,KAAKG,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAb;AACApH,iBAAKtJ,MAAL,GAAcA,MAAd;AACA,gBAAI6Q,mBAAmBN,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;AACA,gBAAII,mBAAmBP,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;;AAEA,qBAASK,iBAAT,GAA6B;AAC3B/Q,qBAAOG,KAAP,GAAemO,KAAKvM,GAAL,CAAS0O,eAAe,CAAf,EAAkBO,WAA3B,EAAwC,GAAxC,CAAf;AACA,kBAAIC,gBAAgBjR,OAAOK,UAAP,CAAkB,IAAlB,CAApB;AACA4Q,4BAAcC,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BlR,OAAOG,KAArC,EAA4CH,OAAOqE,MAAnD;;AAEA,kBAAI8M,MAAMF,cAAcG,oBAAd,CAAmC,CAAnC,EAAsC,CAAtC,EAAyCpR,OAAOG,KAAhD,EAAuD,CAAvD,CAAV;AACA,kBAAIkR,aAAa,IAAI/C,KAAKvM,GAAL,CAASuH,KAAK1D,KAAL,CAAWnE,MAAX,CAAkB9B,MAA3B,EAAmC,CAAnC,CAArB;AACA,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAI6J,KAAK1D,KAAL,CAAWnE,MAAX,CAAkB9B,MAAtC,EAA8CF,GAA9C,EAAmD;AACjD,oBAAI6R,eAAehI,KAAK1D,KAAL,CAAWnE,MAAX,CAAkBhC,CAAlB,CAAnB;AACA0R,oBAAII,YAAJ,CAAiBjD,KAAKxM,GAAL,CAASuP,aAAa5R,CAAtB,EAAyB,CAAzB,CAAjB,EAA8C6R,YAA9C;AACD;AACDL,4BAAcO,SAAd,GAA0BL,GAA1B;AACAF,4BAAcQ,QAAd,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BzR,OAAOG,KAApC,EAA2C,CAA3C;AACAmJ,mBAAK2H,aAAL,GAAqBA,aAArB;;AAEAJ,+BAAiBa,SAAjB,GAA6BpD,KAAKvM,GAAL,CAASwM,KAAT,CAAeD,IAAf,EAAqBhF,KAAK1D,KAAL,CAAWlG,UAAX,CAAsBoP,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACAgC,+BAAiBY,SAAjB,GAA6BpD,KAAKxM,GAAL,CAASyM,KAAT,CAAeD,IAAf,EAAqBhF,KAAK1D,KAAL,CAAWlG,UAAX,CAAsBoP,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACD;AACDiC,gCAhC6B,CAgCR;;AAErB,qBAASY,iBAAT,CAA2BC,SAA3B,EAAsC9L,EAAtC,EAA0C;AACzC,qBAAOpF,GAAGmR,MAAH,CAAUD,UAAUvK,cAAV,CAAyBvB,EAAzB,CAAV,CAAP,CADyC,CACO;AAChD;;AAED,qBAASgM,wBAAT,CAAkCF,SAAlC,EAA6C9L,EAA7C,EAAiD;AAChD,qBAAOpF,GAAGmR,MAAH,CAAUD,SAAV,EAAqBG,SAArB,CAA+B,MAA/B,EACLC,MADK,CACE,YAAU;AACpB,uBAAOtR,GAAGmR,MAAH,CAAU,IAAV,EAAgB9O,IAAhB,MAA0B+C,EAAjC;AACG,eAHK,CAAP;AAIA;;AAED,qBAASmM,uBAAT,CAAiCL,SAAjC,EAA4CtJ,KAA5C,EAAmD;AAClD,kBAAI4J,gBAAgBxR,GAAGmR,MAAH,CAAUD,SAAV,EAAqBG,SAArB,CAA+B,KAA/B,EAClBC,MADkB,CACX,YAAU;AACpB,uBAAOtR,GAAGmR,MAAH,CAAU,IAAV,EAAgB9O,IAAhB,MAA0BuF,KAAjC;AACG,eAHkB,CAApB;AAIA,kBAAI6J,OAAOD,cAAcC,IAAd,EAAX;AACA,kBAAIA,QAAQ,IAAZ,EAAkB;AACjB,oBAAIC,cAAcjL,EAAEgL,IAAF,EAAQE,OAAR,CAAgB,OAAhB,CAAlB;AACA,oBAAID,YAAYzS,MAAZ,GAAqB,CAAzB,EAA4B;AAC3B,yBAAOe,GAAGmR,MAAH,CAAUO,YAAY,CAAZ,CAAV,CAAP;AACA;AACD;AACD,qBAAO1R,GAAGmR,MAAH,EAAP;AACA;;AAED,qBAASS,wBAAT,CAAkCV,SAAlC,EAA6CtJ,KAA7C,EAAoD;AACnD,qBAAO5H,GAAGmR,MAAH,CAAUD,SAAV,EAAqBG,SAArB,CAA+B,MAA/B,EACLC,MADK,CACE,YAAU;AACpB,uBAAOtR,GAAGmR,MAAH,CAAU,IAAV,EAAgB9O,IAAhB,MAA0BuF,KAAjC;AACG,eAHK,CAAP;AAIA;;AAED,qBAASiK,aAAT,CAAuBL,aAAvB,EAAsC1F,UAAtC,EAAkD;AACjD,kBAAIgG,SAASN,cAAcH,SAAd,CAAwB,qBAAxB,CAAb;AACGS,qBAAO7Q,KAAP,CAAa,MAAb,EAAqB6K,WAAWhM,KAAhC;;AAEA,kBAAIiS,MAAMP,cAAcL,MAAd,CAAqB,KAArB,CAAV;AACA,kBAAIvR,IAAImS,IAAI9B,MAAJ,CAAW,GAAX,CAAR;AACArQ,gBAAEoS,OAAF,CAAU,eAAV,EAA2B,IAA3B;AACApS,gBAAEqB,KAAF,CAAQ,kBAAR,EAA4B6K,WAAWhM,KAAvC;AACAF,gBAAEwK,IAAF,CAAO0B,WAAWH,cAAlB;AACA6F,4BAAcL,MAAd,CAAqB,eAArB,EACGc,IADH,CACQ,QADR,EACkBF,IAAIN,IAAJ,GAAWS,YAD7B;AAEH;;AAED,qBAASC,uBAAT,CAAiCX,aAAjC,EAAgD1F,UAAhD,EAA4D;AAC3D,kBAAIsG,aAAapS,GAAGmR,MAAH,CAAUK,cAAcC,IAAd,GAAqBY,UAA/B,CAAjB;AACAD,yBAAWnC,MAAX,CAAkB,IAAlB;AACG,kBAAIqC,IAAIF,WAAWnC,MAAX,CAAkB,MAAlB,CAAR;AACAqC,gBAAEN,OAAF,CAAU,eAAV,EAA2B,IAA3B;AACAM,gBAAErR,KAAF,CAAQ,kBAAR,EAA4B6K,WAAWhM,KAAvC;AACAwS,gBAAElI,IAAF,CAAO0B,WAAWH,cAAlB;AACH;;AAED,qBAAS4G,kBAAT,CAA4Bf,aAA5B,EAA2C1F,UAA3C,EAAuD;AACrD0F,4BAAcgB,IAAd,CAAmB,YAAW;AAC5B,oBAAIC,KAAK,IAAT;AACA,oBAAIC,YAAY;AACdlT,qBAAGiT,GAAGE,OAAH,GAAanT,CADF;AAEdoT,qBAAGH,GAAGE,OAAH,GAAaC,CAAb,GAAiBH,GAAGE,OAAH,GAAahP,MAA9B,GAAuC,EAF5B;AAGdlE,yBAAOgT,GAAGE,OAAH,GAAalT,KAHN;AAIdkE,0BAAQ8O,GAAGE,OAAH,GAAahP;AAJP,iBAAhB;AAMA,oBAAIkP,OAAO7S,GAAGmR,MAAH,CAAUsB,GAAGJ,UAAb,EAAyBlB,MAAzB,CAAgC,MAAhC,CAAX;AACAnR,mBAAGmR,MAAH,CAAUsB,GAAGJ,UAAb,EACGS,MADH,CACU,MADV,EAEG7R,KAFH,CAES,MAFT,EAEiB6K,WAAWhM,KAF5B,EAGGmS,IAHH,CAGQ,GAHR,EAGaS,UAAUlT,CAHvB,EAIGyS,IAJH,CAIQ,GAJR,EAIaS,UAAUE,CAJvB,EAKGX,IALH,CAKQ,OALR,EAKiBS,UAAUjT,KAL3B,EAMGwS,IANH,CAMQ,QANR,EAMkBS,UAAU/O,MAN5B;AAOA3D,mBAAGmR,MAAH,CAAUsB,GAAGJ,UAAb,EACGS,MADH,CACU,MADV,EAEGzQ,IAFH,CAEQyJ,WAAWH,cAFnB,EAGGsG,IAHH,CAGQ,GAHR,EAGaS,UAAUlT,CAAV,GAAckT,UAAUjT,KAAV,GAAgB,CAH3C,EAIGwS,IAJH,CAIQ,GAJR,EAIaS,UAAUE,CAAV,GAAcF,UAAU/O,MAAxB,GAA+B,CAJ5C,EAKGsO,IALH,CAKQ,OALR,EAKiBS,UAAUjT,KAL3B,EAMGwS,IANH,CAMQ,QANR,EAMkBS,UAAU/O,MAN5B,EAOG1C,KAPH,CAOS,aAPT,EAOwB,QAPxB;AAQD,eAxBD;AAyBD;;AAED,qBAAS8R,iBAAT,CAA2BnK,IAA3B,EAAiC;AAChC,kBAAIoK,aAAahT,GAAGmR,MAAH,CAAUzK,SAASC,cAAT,CAAwBiC,KAAK1D,KAAL,CAAWC,OAAnC,CAAV,CAAjB;AACA,kBAAI8N,sBAAsBD,WAAW/C,MAAX,CAAkB,OAAlB,CAA1B;AACAgD,kCAAoB5Q,IAApB,CAAyB7B,sBAAsBoI,KAAK1D,KAAL,CAAWlE,WAAjC,CAAzB;AACA,kBAAIkS,qBAAqBF,WAAW/C,MAAX,CAAkB,OAAlB,CAAzB;AACAiD,iCAAmB7Q,IAAnB,CAAwBuG,KAAK1D,KAAL,CAAWjE,KAAnC;AACA;;AAED,qBAASkS,WAAT,GAAuB;AACrB,kBAAIxU,OAAOiK,KAAK1C,OAAhB;AACA0C,mBAAK1C,OAAL,GAAe,EAAf,CAFqB,CAEF;AACnBrH,sBAAQC,KAAR,CAAc,oBAAd;AACA,kBAAI6K,MAAMlD,EAAEC,SAASC,cAAT,CAAwBiC,KAAK1D,KAAL,CAAWC,OAAnC,CAAF,CAAV;AACA,kBAAIyD,KAAK1D,KAAL,CAAWrD,QAAf,EAAyB;AACvB4E,kBAAEkD,GAAF,EAAOuG,GAAP,CAAW,WAAX,EAAwB,MAAxB;AACD;;AAED,kBAAIvG,IAAI,CAAJ,MAAWb,SAAf,EAA0B;AACxB;AACD;;AAED,mBAAK,IAAIyB,GAAT,IAAgB5L,IAAhB,EAAsB;AACpB,oBAAImN,aAAanN,KAAK4L,GAAL,CAAjB;;AAEA;AACA;AACA,oBAAIiH,gBAAgBP,kBAAkBtH,IAAI,CAAJ,CAAlB,EAA0BY,GAA1B,CAApB;AACA,oBAAI,CAACiH,cAAc4B,KAAd,EAAL,EAA4B;AACxBvB,gCAAcL,aAAd,EAA6B1F,UAA7B;AACA;AACH;;AAED0F,gCAAgBJ,yBAAyBzH,IAAI,CAAJ,CAAzB,EAAiCY,GAAjC,CAAhB;AACA,oBAAI,CAACiH,cAAc4B,KAAd,EAAL,EAA4B;AAC1BjB,0CAAwBX,aAAxB,EAAuC1F,UAAvC;AACA;AACD;;AAED0F,gCAAgBD,wBAAwB5H,IAAI,CAAJ,CAAxB,EAAgCY,GAAhC,CAAhB;AACA,oBAAI,CAACiH,cAAc4B,KAAd,EAAL,EAA4B;AAC1BvB,gCAAcL,aAAd,EAA6B1F,UAA7B;AACA;AACD;;AAED0F,gCAAgBI,yBAAyBjI,IAAI,CAAJ,CAAzB,EAAiCY,GAAjC,CAAhB;AACA,oBAAI,CAACiH,cAAc4B,KAAd,EAAL,EAA4B;AAC1Bb,qCAAmBf,aAAnB,EAAkC1F,UAAlC;AACA;AACD;;AAEDjN,wBAAQC,KAAR,CAAc,mDAAmDyL,GAAjE;AACD;;AAEDwI,gCAAkBnK,IAAlB;AACD,aA3K4B,CA2K3B;;AAED,qBAAS3B,MAAT,GAAkB;AACjBoJ;AACA8C;AACD;;AAED,iBAAK7N,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAW;AAClC0B;AACA2B,mBAAKyK,kBAAL;AACD,aAHD;AAID;;;;QAhwBuBlT,gB;;AA0xB1ByE,kBAAY0O,WAAZ,GAA0B,aAA1B;;6BAGE1O,W;;kCACAA,W","file":"diagramControl.js","sourcesContent":["import mermaid from './libs/mermaid/dist/mermaid';\r\nimport d3 from './libs/d3/dist/d3.min';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {\r\n  MetricsPanelCtrl\r\n} from 'app/plugins/sdk';\r\nimport {\r\n  diagramEditor,\r\n  displayEditor,\r\n  compositeEditor,\r\n  mappingEditor\r\n} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\n//import './css/diagram.css!';\r\n\r\n// Work In Progress\r\n// Build a custom style editor\r\nimport { diagramStyleFormatter } from './diagramStyle';\r\n\r\nconst mermaidAPI = mermaid.mermaidAPI;\r\n\r\nconst panelDefaults = {\r\n  composites: [],\r\n  metricCharacterReplacements: [],\r\n  // other style overrides\r\n  seriesOverrides: [],\r\n  thresholds: '0,10',\r\n  decimals: 2, // decimal precision\r\n  colors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n  styleValues: {},\r\n  style: '',\r\n  legend: {\r\n    show: true,\r\n    min: true,\r\n    max: true,\r\n    avg: true,\r\n    current: true,\r\n    total: true,\r\n    gradient: {\r\n      enabled: true,\r\n      show: true\r\n    }\r\n  },\r\n  maxDataPoints: 100,\r\n  mappingType: 1,\r\n  maxWidth: false,\r\n  nullPointMode: 'connected',\r\n  moddedSeriesVal: 0,\r\n  format: 'none',\r\n  valueName: 'avg',\r\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n  valueMaps: [{\r\n    value: 'null',\r\n    op: '=',\r\n    text: 'N/A'\r\n  }],\r\n  mappingTypes: [\r\n    {name: 'value to text', value: 1},\r\n    {name: 'range to text', value: 2},\r\n  ],\r\n  content: 'graph LR\\n' +\r\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n    'A --> C(Round Rect)\\n' +\r\n    'B --> D{Rhombus}\\n' +\r\n    'C --> D\\n',\r\n  mode: 'content', //allowed values: 'content' and 'url'\r\n  mermaidServiceUrl: '',\r\n  mermaidServiceKey: '',\r\n  themes: ['default', 'dark', 'forest', 'neutral'],\r\n  init: {\r\n    theme: 'dark',\r\n    securityLevel: 'loose',\r\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    cloneCssStyles: true, // - This options controls whether or not the css rules should be copied into the generated svg\r\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n    flowchart: {\r\n      htmlLabels: true,\r\n      useMaxWidth: true\r\n    },\r\n    sequence: {\r\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n      actorMargin: 50, // - Margin between actors\r\n      width: 150, // - Width of actor boxes\r\n      height: 65, // - Height of actor boxes00000000001111\r\n      boxMargin: 10, // - Margin around l01oop boxes\r\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n      noteMargin: 10, // - margin around notes\r\n      messageMargin: 35, // - Space between messages\r\n      mirrorActors: true, // - mirror actors under diagram\r\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n      useMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n    },\r\n    gantt: {\r\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n      barHeight: 20, // - the height of the bars in the graph\r\n      barGap: 4, // - the margin between the different activities in the gantt diagram\r\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n      fontSize: 11, // - font size ...\r\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n      numberSectionStyles: 3, // - the number of alternating section styles\r\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n    },\r\n    //classDiagram: {},\r\n    //info: {}\r\n  }\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $sce, $http) {\r\n    super($scope, $injector);\r\n    _.defaults(this.panel, panelDefaults);\r\n    this.$http = $http;\r\n    this.panel.graphId = 'diagram_' + this.panel.id;\r\n    this.containerDivId = 'container_' + this.panel.graphId;\r\n    this.$sce = $sce;\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.initializeMermaid();\r\n  }\r\n\r\n  initializeMermaid() {\r\n    mermaidAPI.initialize(this.panel.init);\r\n    mermaidAPI.parseError = this.handleParseError.bind(this);\r\n  }\r\n\r\n  changeTheme(){\r\n    this.initializeMermaid();\r\n    this.updateDiagram(this.svgData);\r\n  }\r\n\r\n  handleParseError(err, hash) {\r\n    this.error = 'Failed to parse diagram definition';\r\n    this.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Diagram', diagramEditor, 2);\r\n    this.addEditorTab('Display', displayEditor, 3);\r\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\r\n    this.addEditorTab('Value Mappings', mappingEditor, 5);\r\n  }\r\n\r\n  getDiagramContainer() {\r\n    return $(document.getElementById(this.containerDivId));\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    console.debug('received data');\r\n    console.debug(dataList);\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n    console.debug('mapped dataList to series');\r\n    console.debug(this.series);\r\n    var data = this.setValues();\r\n    // this update works for local diagrams, if the url method is used the data has to be stored in the callback\r\n    this.svgData = data;\r\n    this.updateDiagram(data);\r\n    this.render();\r\n  }\r\n\r\n  replaceMetricCharacters(metricName) {\r\n    // a datasource sending bad data will have a type other than string, set it to \"MISSING_METRIC_TARGET\" and return\r\n    if (typeof metricName !== 'string') return \"DATASOURCE_SENT_INVALID_METRIC_TARGET\";\r\n    var replacedText = metricName.replace(/\"|,|;|=|:|{|}/g, '_');\r\n    for (var index in this.panel.metricCharacterReplacements) {\r\n      var replacement = this.panel.metricCharacterReplacements[index];\r\n      // start with a simple replacement\r\n      var pattern = replacement.replacementPattern;\r\n      // check if the pattern is empty\r\n      if (pattern.length === 0) continue;\r\n      // if it is a regex, convert\r\n      if (pattern[0] === '/') {\r\n        pattern = kbn.stringToJsRegex(replacement.replacementPattern);\r\n      }\r\n      replacedText = replacedText.replace(\r\n        pattern,\r\n        replacement.replaceWithText\r\n      );\r\n    }\r\n    return replacedText;\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    var alias = this.replaceMetricCharacters(seriesData.target);\r\n    var series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: alias,\r\n      unit: seriesData.unit\r\n    });\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    var datapoints = seriesData.datapoints || [];\r\n    if (datapoints && datapoints.length > 0) {\r\n      var last = datapoints[datapoints.length - 1][1];\r\n      var from = this.range.from;\r\n      if (last - from < -10000) {\r\n        series.isOutsideRange = true;\r\n      }\r\n    }\r\n    return series;\r\n  } // End seriesHandler()\r\n\r\n  addSeriesOverride(override) {\r\n    this.panel.seriesOverrides.push(override || {});\r\n  }\r\n\r\n  removeSeriesOverride(override) {\r\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n    this.refresh();\r\n  }\r\n\r\n  addComposite(composite) {\r\n    this.panel.composites.push(composite || {});\r\n  }\r\n  removeComposite(composite) {\r\n    this.panel.composites = _.without(this.panel.composites, composite);\r\n    this.refresh();\r\n  }\r\n  getSeriesNamesForComposites() {\r\n    return _.map(this.$scope.ctrl.series, function(series) {\r\n      return series.alias;\r\n    });\r\n  }\r\n\r\n  addMetricToComposite(composite) {\r\n    if (composite.metrics === undefined) {\r\n      composite.metrics = [{}];\r\n    } else {\r\n      composite.metrics.push({});\r\n    }\r\n    this.refresh();\r\n  }\r\n  removeMetricFromComposite(composite, metric) {\r\n    composite.metrics = _.without(composite.metrics, metric);\r\n    this.refresh();\r\n  }\r\n\r\n  addMetricCharacterReplacement(replacement) {\r\n    this.panel.metricCharacterReplacements.push(replacement || {\r\n      replacementPattern: '',\r\n      replaceWithText: '_'\r\n    });\r\n  }\r\n  removeMetricCharacterReplacement(replacement) {\r\n    this.panel.metricCharacterReplacements = _.without(this.panel.metricCharacterReplacements, replacement);\r\n    this.refresh();\r\n  }\r\n\r\n  addValueMapping(mapping) {\r\n    this.panel.valueMaps.push(mapping || {});\r\n  }\r\n\r\n  removeValueMapping(mapping) {\r\n    this.panel.valueMaps = _.without(this.panel.valueMaps, mapping);\r\n  }\r\n\r\n  addEntryToValueMapping(mapping) {\r\n    if (mapping.type == 1) {\r\n      if (mapping.valueToText === undefined) {\r\n        mapping.valueToText = [{}];\r\n      } else {\r\n        mapping.valueToText.push({});\r\n      }\r\n    } else if (mapping.type == 2) {\r\n      if (mapping.rangeToText === undefined) {\r\n        mapping.rangeToText = [{}];\r\n      } else {\r\n        mapping.rangeToText.push({});\r\n      }\r\n    }\r\n  }\r\n\r\n  removeEntryFromValueMapping(valueMap, mapping) {\r\n    if (valueMap.type == 1) {\r\n      valueMap.valueToText = _.without(valueMap.valueToText, mapping);\r\n    } else if (valueMap.type == 2) {\r\n      valueMap.rangeToText = _.without(valueMap.rangeToText, mapping);\r\n    }\r\n  }\r\n  \r\n  updateThresholds() {\r\n    var thresholdCount = this.panel.thresholds.length;\r\n    var colorCount = this.panel.colors.length;\r\n    this.refresh();\r\n  }\r\n\r\n  changeColor(colorIndex, color) {\r\n    this.panel.colors[colorIndex] = color;\r\n  }\r\n\r\n  removeColor(colorIndex) {\r\n    this.panel.colors.splice(colorIndex, 1);\r\n  }\r\n\r\n  addColor() {\r\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\r\n  }\r\n\r\n  setUnitFormat(subItem) {\r\n    this.panel.format = subItem.value;\r\n    this.refresh();\r\n  }\r\n\r\n  clearDiagram() {\r\n    if ($('#'+this.panel.graphId).length) {\r\n      $('#' + this.panel.graphId).remove();\r\n    }\r\n    this.svg = {};\r\n  }\r\n\r\n  renderDiagram(graphDefinition, data) {\r\n    // substitute values inside \"link text\"\r\n    // this will look for any composite prefixed with a # and substitute the value of the composite\r\n    // if a series alias is found, in the form #alias, the value will be substituted\r\n    // this allows link values to be displayed based on the metric\r\n    graphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\r\n    graphDefinition = this.templateSrv.replaceWithText(graphDefinition);\r\n    var diagramContainer = $(document.getElementById(this.containerDivId));\r\n    var _this = this;\r\n    var renderCallback = function(svgCode, bindFunctions) {\r\n      if (svgCode === '') {\r\n        diagramContainer.html('<p>There was a problem rendering the graph</p>');\r\n      } else {\r\n        diagramContainer.html(svgCode);\r\n        if (bindFunctions) {\r\n          bindFunctions(diagramContainer[0]);\r\n        }\r\n        console.debug(\"Inside rendercallback of renderDiagram\");\r\n        // svgData is empty when this callback happens, update it so the styles will be applied\r\n        _this.svgData = data;\r\n        // force a render or we will not see an update\r\n        _this.render();\r\n      }\r\n    };\r\n    \r\n    try {\r\n      // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n      mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback, diagramContainer[0]);\r\n    } catch (err) {\r\n      diagramContainer.html('<p>Error rendering diagram. Check the diagram definition</p><p>'+ err + '</p>');\r\n    }\r\n  }\r\n  \r\n  updateDiagram(data) {\r\n    if (this.panel.content.length > 0) {\r\n      var mode = this.panel.mode;\r\n      if (mode == 'url') {\r\n        var templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\r\n        var _this = this;\r\n        var key = this.panel.mermaidServiceKey;\r\n        this.$http({\r\n          method: 'GET',\r\n          url: templatedURL,\r\n          headers: {\r\n            'Accept': 'text/x-mermaid,text/plain;q=0.9,*/*;q=0.8',\r\n            'x-api-key': key\r\n          }\r\n        }).then(function successCallback(response) {\r\n          //the response must have text/plain content-type\r\n          // clearing the diagram here will result in less artifacting waiting for the response\r\n          _this.clearDiagram();\r\n          _this.renderDiagram(response.data, data);\r\n        }, function errorCallback(response) {\r\n          console.warn('error', response);\r\n        })\r\n      } else {\r\n        this.clearDiagram();\r\n        this.renderDiagram(this.panel.content, data);\r\n      }\r\n    }\r\n  } // End updateDiagram()\r\n\r\n\r\n\r\n  /**\r\n   * substitute values inside \"link text\"\r\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\r\n   * if a series alias is found, in the form #alias, the value will be substituted\r\n   * this allows link values to be displayed based on the metric\r\n   *\r\n   * Prefix Modifier For Composites\r\n   *   # Raw Value of Series\r\n   *   ! Raw Value plus Metric Name\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\r\n   *\r\n   * Prefix Modifier For Series\r\n   *   # Raw Value of Series\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *\r\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\r\n   * @param  {[Array]} data [Series Data]\r\n   * @return {[String]} [Modified Graph Definition]\r\n   */\r\n  substituteHashPrefixedNotation(graphDefinition, data) {\r\n    // inspect the string, locate all # prefixed items, and replace them with the value\r\n    // of the series. If no matching series is found, leave it alone\r\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\r\n    if (matches === null) return graphDefinition;\r\n    // check if there is a composite with a matching name\r\n    for (var i = 0; i < matches.length; i++) {\r\n      var aMatch = matches[i];\r\n      var valueType = aMatch[0];\r\n      aMatch = aMatch.substring(1);\r\n      // check composites first\r\n      for (var j = 0; j < this.panel.composites.length; j++) {\r\n        var aComposite = this.panel.composites[j];\r\n        if (aComposite.name === aMatch) {\r\n          // found matching composite, get the valueFormatted\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[aComposite.name].value;\r\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n              break;\r\n            case '!':\r\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[aComposite.name].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n              break;\r\n            case '&':\r\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      // next check series\r\n      for (var k = 0; k < this.series.length; k++) {\r\n        var seriesItem = this.series[k];\r\n        if (seriesItem.alias === aMatch) {\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[seriesItem.alias].value;\r\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[seriesItem.alias].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return graphDefinition;\r\n  }\r\n\r\n  setValues() {\r\n    var data = {};\r\n    if (this.series && this.series.length > 0) {\r\n      for (let i = 0; i < this.series.length; i++) {\r\n        let seriesItem = this.series[i];\r\n        console.debug('setting values for series');\r\n        console.debug(seriesItem);\r\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n        // store alias in data\r\n        data[seriesItem.alias].alias = seriesItem.alias;\r\n        var lastPoint = _.last(seriesItem.datapoints);\r\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\r\n        if (this.panel.valueName === 'name') {\r\n          data[seriesItem.alias].value = 0;\r\n          data[seriesItem.alias].valueRounded = 0;\r\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n        } else if (_.isString(lastValue)) {\r\n          data[seriesItem.alias].value = 0;\r\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n          data[seriesItem.alias].valueRounded = 0;\r\n        } else {\r\n          data[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n          var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\r\n          // put the value in quotes to escape \"most\" special characters\r\n          data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n          data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n        }\r\n        if (this.panel.legend.gradient.enabled) {\r\n          data[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n        } else {\r\n          data[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n        }\r\n      }\r\n    }\r\n    // Map values to text if needed\r\n    this.applyValueMapping(data);\r\n    // now add the composites to data\r\n    for (let i = 0; i < this.panel.composites.length; i++) {\r\n      let aComposite = this.panel.composites[i];\r\n      let currentWorstSeries = null;\r\n      let currentWorstSeriesName = null;\r\n      for (let j = 0; j < aComposite.metrics.length; j++) {\r\n    \tlet aMetric = aComposite.metrics[j];\r\n    \tlet seriesName = aMetric.seriesName;\r\n        // make sure we have a match\r\n        if (!data.hasOwnProperty(seriesName)) {\r\n        \tcontinue;\r\n        }\r\n        let seriesItem = data[seriesName];\r\n        // check colorData thresholds\r\n        if (currentWorstSeries === null) {\r\n          currentWorstSeries = seriesItem;\r\n        } else {\r\n          currentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem, aComposite.showLowest);\r\n        }\r\n      }\r\n      // Prefix the valueFormatted with the actual metric name\r\n      if (currentWorstSeries !== null) {\r\n    \tlet copy = _.clone(currentWorstSeries);\r\n    \tcopy.valueFormattedWithPrefix = currentWorstSeries.alias + ': ' + currentWorstSeries.valueFormatted;\r\n    \tcopy.valueRawFormattedWithPrefix = currentWorstSeries.alias + ': ' + currentWorstSeries.value;\r\n    \tcopy.valueFormatted = currentWorstSeries.alias + ': ' + currentWorstSeries.valueFormatted;\r\n        // now push the composite into data\r\n        data[aComposite.name] = copy;\r\n      }\r\n    }\r\n    return data;\r\n  } // End setValues()\r\n\r\n  getWorstSeries(series1, series2, showLowest) {\r\n    if (showLowest) {\r\n    \t// return series1 if the value is lower, otherwise return series2\r\n    \treturn series1.value < series2.value ? series1 : series2;\r\n    } else {\r\n    \t// return series1 if the value is greater, otherwise return series2\r\n    \treturn series1.value > series2.value ? series1 : series2;\r\n    }\r\n  }\r\n\r\n  getGradientForValue(data, value) {\r\n    console.debug('Getting gradient for value');\r\n    console.debug(data);\r\n    console.debug(value);\r\n    var min = Math.min.apply(Math, data.thresholds);\r\n    var max = Math.max.apply(Math, data.thresholds);\r\n    var absoluteDistance = max - min;\r\n    var valueDistanceFromMin = value - min;\r\n    var xPercent = valueDistanceFromMin / absoluteDistance;\r\n    // Get the smaller number to clamp at 0.999 max\r\n    xPercent = Math.min(0.999, xPercent);\r\n    // Get the larger number to clamp at 0.001 min\r\n    xPercent = Math.max(0.001, xPercent);\r\n    if (data.invertColors) {\r\n      xPercent = 1 - xPercent;\r\n    }\r\n\r\n    return getColorByXPercentage(this.canvas, xPercent);\r\n  }\r\n\r\n  applyOverrides(seriesItemAlias) {\r\n    var seriesItem = {},\r\n      colorData = {},\r\n      overrides = {};\r\n\r\n    console.debug('applying overrides for seriesItem');\r\n    console.debug(seriesItemAlias);\r\n    console.debug(this.panel.seriesOverrides);\r\n    for (var i = 0; i < this.panel.seriesOverrides.length; i++) {\r\n      console.debug('comparing:');\r\n      console.debug(this.panel.seriesOverrides[i]);\r\n\r\n      if (this.panel.seriesOverrides[i]) {\r\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n        var matches = seriesItemAlias.match(regex);\r\n        if (matches && matches.length > 0) {\r\n          overrides = this.panel.seriesOverrides[i];\r\n        }\r\n      }\r\n    }\r\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n      return Number(strVale.trim());\r\n    });\r\n    colorData.colorMap = this.panel.colors.slice();\r\n    colorData.invertColors = overrides.invertColors || false;\r\n    if (colorData.invertColors) {\r\n      colorData.colorMap.reverse();\r\n    }\r\n    seriesItem.colorData = colorData;\r\n\r\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\r\n    seriesItem.format = overrides.unitFormat || this.panel.format;\r\n    return seriesItem;\r\n  }\r\n\r\n\tapplyValueMapping(data) {\r\n\t\tfor (let i = 0; i < this.panel.valueMaps.length; i++) {\r\n\t\t\tvar map = this.panel.valueMaps[i];\r\n\t\t\tif (! map.hasOwnProperty('alias'))\r\n\t\t\t\tcontinue;\r\n\t\t\tvar regex = kbn.stringToJsRegex(map.alias);\r\n\t\t\tconsole.debug(\"Checking mapping: \" +map.alias);\r\n\t\t\tfor(let j = 0; j < this.series.length; j++) {\r\n\t\t\t\tvar matches = this.series[j].alias.match(regex);\r\n\t\t\t\tconsole.debug(\"  Series: \" +this.series[j].alias);\r\n\t\t\t\tif (matches && matches.length > 0) {\r\n\t\t\t\t\tvar seriesItem = this.series[j];\r\n\t\t\t\t\tvar dataItem = data[seriesItem.alias];\r\n\t\t\t\t\tif (map.type == 1) {\r\n\t\t\t\t\t\tfor(let k = 0; k < map.valueToText.length; k++) {\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\t// Value mappings\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\tvar valueMapping = map.valueToText[k];\r\n\t\t\t\t\t\t\t\tconsole.debug(\"    Mapping: \" +dataItem.valueFormatted +\" =? \" +valueMapping.value);\r\n\t\t\t\t\t\t\t\tif (valueMapping.value === 'null') {\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t} else if (parseFloat(valueMapping.value) == dataItem.valueRounded) {\r\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\r\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +valueMapping.text);\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (map.type == 2) {\r\n\t\t\t\t\t\tfor(let k = 0; k < map.rangeToText.length; k++) {\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\t// Range Mappings\r\n\t\t\t\t\t\t\t\t//\t\r\n\t\t\t\t\t\t\t\tvar rangeMapping = map.rangeToText[k];\r\n\t\t\t\t\t\t\t\tif (rangeMapping.from === 'null' && rangeNapping.to == 'null') {\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t} else if (parseFloat(rangeMapping.from) <= dataItem.valueRounded && parseFloat(rangeMapping.to) >= dataItem.valueRounded) {\r\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\r\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +rangeMapping.text);\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n  invertColorOrder() {\r\n    this.panel.colors.reverse();\r\n    this.refresh();\r\n  }\r\n\r\n  getDecimalsForValue(value) {\r\n    if (_.isNumber(this.panel.decimals)) {\r\n      return {\r\n        decimals: this.panel.decimals,\r\n        scaledDecimals: null\r\n      };\r\n    }\r\n\r\n    var delta = value / 2;\r\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n    var magn = Math.pow(10, -dec),\r\n      norm = delta / magn, // norm is between 1.0 and 10.0\r\n      size;\r\n\r\n    if (norm < 1.5) {\r\n      size = 1;\r\n    } else if (norm < 3) {\r\n      size = 2;\r\n      // special case for 2.5, requires an extra decimal\r\n      if (norm > 2.25) {\r\n        size = 2.5;\r\n        ++dec;\r\n      }\r\n    } else if (norm < 7.5) {\r\n      size = 5;\r\n    } else {\r\n      size = 10;\r\n    }\r\n\r\n    size *= magn;\r\n\r\n    // reduce starting decimals if not needed\r\n    if (Math.floor(value) === value) {\r\n      dec = 0;\r\n    }\r\n\r\n    var result = {};\r\n    result.decimals = Math.max(0, dec);\r\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n    return result;\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    var templateSrv = this.templateSrv;\r\n    var diagramElement = elem.find('.diagram');\r\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\r\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    console.debug('found diagramContainer');\r\n    console.debug(diagramContainer);\r\n    elem.css('height', '100%');\r\n\r\n    var canvas = elem.find('.canvas')[0];\r\n    ctrl.canvas = canvas;\r\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n\r\n    function updateCanvasStyle() {\r\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n      var canvasContext = canvas.getContext(\"2d\");\r\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\r\n        var currentColor = ctrl.panel.colors[i];\r\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\r\n      }\r\n      canvasContext.fillStyle = grd;\r\n      canvasContext.fillRect(0, 0, canvas.width, 3);\r\n      ctrl.canvasContext = canvasContext;\r\n\r\n      gradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n      gradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    }\r\n    updateCanvasStyle(); // run once at beginning so the gradients are ready on first data\r\n    \r\n    function selectElementById(container, id) {\r\n    \treturn d3.select(container.getElementById(id)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n    }\r\n    \r\n    function selectElementByEdgeLabel(container, id) {\r\n    \treturn d3.select(container).selectAll('span')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == id;\r\n\t    \t});\r\n    }\r\n\r\n    function selectDivElementByAlias(container, alias) {\r\n    \tvar targetElement = d3.select(container).selectAll('div')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == alias;\r\n\t    \t});\r\n    \tvar node = targetElement.node();\r\n    \tif (node != null) {\r\n    \t\tvar parentShape = $(node).closest('.node');\r\n    \t\tif (parentShape.length > 0) {\r\n    \t\t\treturn d3.select(parentShape[0]);\r\n    \t\t}     \t\t\r\n    \t}\r\n    \treturn d3.select();\r\n    }\r\n\r\n    function selectTextElementByAlias(container, alias) {\r\n    \treturn d3.select(container).selectAll('text')\r\n\t    \t.filter(function(){ \r\n\t\t\t\treturn d3.select(this).text() == alias;\r\n\t    \t});\r\n    }\r\n    \r\n    function styleD3Shapes(targetElement, seriesItem) {\r\n    \tvar shapes = targetElement.selectAll('rect,circle,polygon');\r\n        shapes.style('fill', seriesItem.color);\r\n\r\n        var div = targetElement.select('div');\r\n        var p = div.append('p');\r\n        p.classed('diagram-value', true);\r\n        p.style('background-color', seriesItem.color);\r\n        p.html(seriesItem.valueFormatted);\r\n        targetElement.select('foreignObject')\r\n          .attr('height', div.node().clientHeight);\r\n    }\r\n    \r\n    function styleFlowChartEdgeLabel(targetElement, seriesItem) {\r\n    \tvar edgeParent = d3.select(targetElement.node().parentNode);\r\n    \tedgeParent.append('br');\r\n        var v = edgeParent.append('span');\r\n        v.classed('diagram-value', true);\r\n        v.style('background-color', seriesItem.color);\r\n        v.html(seriesItem.valueFormatted);\r\n    }\r\n\r\n    function styleTextEdgeLabel(targetElement, seriesItem) {\r\n      targetElement.each(function() {\r\n        var el = this;\r\n        var markerBox = {\r\n          x: el.getBBox().x,\r\n          y: el.getBBox().y + el.getBBox().height + 10,\r\n          width: el.getBBox().width,\r\n          height: el.getBBox().height\r\n        };\r\n        var line = d3.select(el.parentNode).select('line');\r\n        d3.select(el.parentNode)\r\n          .insert(\"rect\")\r\n          .style('fill', seriesItem.color)\r\n          .attr(\"x\", markerBox.x)\r\n          .attr(\"y\", markerBox.y)\r\n          .attr(\"width\", markerBox.width)\r\n          .attr(\"height\", markerBox.height);\r\n        d3.select(el.parentNode)\r\n          .insert(\"text\")\r\n          .text(seriesItem.valueFormatted)\r\n          .attr(\"x\", markerBox.x + markerBox.width/2)\r\n          .attr(\"y\", markerBox.y + markerBox.height-1)\r\n          .attr(\"width\", markerBox.width)\r\n          .attr(\"height\", markerBox.height)\r\n          .style(\"text-anchor\", \"middle\");\r\n      });\r\n    }\r\n    \r\n    function injectCustomStyle(ctrl) {\r\n    \tvar diagramDiv = d3.select(document.getElementById(ctrl.panel.graphId));\r\n    \tvar diagramStyleElement = diagramDiv.append('style');\r\n    \tdiagramStyleElement.text(diagramStyleFormatter(ctrl.panel.styleValues));\r\n    \tvar customStyleElement = diagramDiv.append('style');\r\n    \tcustomStyleElement.text(ctrl.panel.style);\r\n    }\r\n\r\n    function updateStyle() {\r\n      var data = ctrl.svgData;\r\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n      console.debug('updating svg style');\r\n      var svg = $(document.getElementById(ctrl.panel.graphId));\r\n      if (ctrl.panel.maxWidth) {\r\n        $(svg).css('max-width', '100%');\r\n      }\r\n\r\n      if (svg[0] === undefined) {\r\n        return;\r\n      }\r\n\r\n      for (var key in data) {\r\n        var seriesItem = data[key];\r\n        \r\n        // Find nodes by ID if we can\r\n        //console.info('finding targetElement');\r\n        var targetElement = selectElementById(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n            styleD3Shapes(targetElement, seriesItem);\r\n            continue;\r\n        }\r\n        \r\n        targetElement = selectElementByEdgeLabel(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n          styleFlowChartEdgeLabel(targetElement, seriesItem);\r\n          continue;\r\n        }\r\n        \r\n        targetElement = selectDivElementByAlias(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n          styleD3Shapes(targetElement, seriesItem);\r\n          continue;\r\n        }\r\n\r\n        targetElement = selectTextElementByAlias(svg[0], key);\r\n        if (!targetElement.empty()) {\r\n          styleTextEdgeLabel(targetElement, seriesItem);\r\n          continue;\r\n        }\r\n\r\n        console.debug('couldnt not find a diagram node with id/text: ' + key);\r\n      }\r\n      \r\n      injectCustomStyle(ctrl);\r\n    } // End updateStyle()\r\n\r\n     function render() {\r\n      updateCanvasStyle();\r\n      updateStyle();\r\n    }\r\n\r\n    this.events.on('render', function() {\r\n      render();\r\n      ctrl.renderingCompleted();\r\n    });\r\n  }\r\n  // End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n  console.debug('Getting color for value');\r\n  console.debug(data);\r\n  console.debug(value);\r\n  for (var i = data.thresholds.length; i > 0; i--) {\r\n    if (value >= data.thresholds[i - 1]) {\r\n      console.debug('Color['+(i-1)+']: ' + data.colorMap[i]);\r\n      return data.colorMap[i-1];\r\n      //return data.colorMap[i];\r\n    }\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent) {\r\n  var x = canvas.width * xPercent;\r\n  var context = canvas.getContext(\"2d\");\r\n  var p = context.getImageData(x, 1, 1, 1).data;\r\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\r\n  return color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n  DiagramCtrl,\r\n  DiagramCtrl as MetricsPanelCtrl\r\n};\r\n"]}